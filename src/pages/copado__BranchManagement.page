<apex:page id="thePage" standardController="copado__Deployment_Flow__c" extensions="copado.BranchManagementExtension,copado.Settings,copado.FeatureHelper,copado.JsRemotingController" sidebar="false" title="Copado Branch Management" showHeader="false" applyHtmlTag="true">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
    <c:GAnalytics />
    <c:WizardUtils />

    <apex:slds />
    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1" />
    <c:IncludeStaticsResourceComponent addJQuery="true" addUIjs="true" addUIcss="true" addCometdjs="true" addJCometdjs="true" addJSON2js="true" addJSzipjs="true" />

    <link rel="stylesheet" typea="text/css" href="{!URLFOR($Resource.DataTables10,'DataTables10/datatables.min.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.copado__DataTables10,'DataTables10/datatables.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.copado__DataTables10,'DataTables10/datatables.select.min.js')}" />
    <c:IncludeJqxResourceComponent addjqxalljs="true" addjqxWjs="true" addjqxBasecss="true" />
    <script type="text/javascript"> var Copado_Licenses = {!CurrentUserLicenses};</script>
    <link rel="stylesheet" href="{!URLFOR($Resource.CopadoChangeManagement,'Assets/css/deploymentFlowConnections.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.utilsV2) }" />
    <apex:includeScript value="{!URLFOR($Resource.JsRemoting) }" />
    <script type="text/javascript" src="{!URLFOR($Resource.CopadoChangeManagement, 'Assets/js/jquery.svg.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.CopadoChangeManagement, 'Assets/js/jquery.connectingLine.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.copadoStreamingService) }"></script>
    <apex:includeScript value="{!URLFOR($Resource.statusManager) }" />
    <head>
        <title>Branch Management {!Deployment_Flow__c.Name} | Copado</title>

        <style type="text/css">
            .icon-blinker {
              animation: blink 1s linear 5;
              -webkit-animation: blink 1s linear 5;
            }

            @keyframes blink {
              50% { opacity: 0; }
            }

            @-webkit-keyframes blink {
                50% { opacity: 0; }
            }

            .WarningColor{
                background-color: #ffb75d !important;
                border: 1px solid #ffb75d !important;
            }

            .statusContent{
                border: 1px solid #0070d2;
                background-color: #0070d2;
                color: white;
                margin-top: 40px;
                padding-top: 6px;
                padding-bottom: 6px;
                border-top: 1px solid #0070d2;
                border-bottom-left-radius: 10px;
                border-bottom-right-radius: 10px;
            }
            .statusContentSync{
                background-color: #F4F6F9;
                color: green;
            }
            .co-lockerBlock1 {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 999;
                background-color: rgba(114, 134, 134, 0.46);;
            }
            .js-show-diff{
                float: right;
                margin-right: 10px;
                color: blue !important;
                text-decoration: underline;
            }
            .jqx-tooltip-main{
                text-align:left;
            }
            .jqx-tabs-titleContentWrapper.jqx-disableselect{
                margin-top: 0px !important;
            }
            .btnPromotion{
                width: 25px;
                height: 20px;
                background-color: transparent;
                border-right: none;
                border-bottom: none;
                border-top: none;
                float: right;
                border: none;
                color:darkgray !important;
            }
            .btnAheadOrBehind {
                color: white !important;
            }
            .resyncEnv{
                width: 25px;
                border-right: none;
                border-bottom: none;
                border-top: none;
                float: right;
                border: none;
                color:white !important;
                background-color:#0070d2 !important;
                text-align: center;
                height:inherit;
                font-weight:bolder;
            }
            .slds-screenlocker div{
                position: absolute;
                top: 50%;
                left: 50%;
                margin-right: -50%;
                transform: translate(-50%, -50%);
                padding-top: 15px;
                padding: 30px;
                background-color: transparent;
                z-index: 9999;
            }
            #screenLockerLightning{
                position: fixed;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                z-index: 10000;
                background-color: rgba(33,33,33,0.2);
            }
            #screenLockerLightningText {
                font-size: 14pt;
                font-weight: bold;
            }
            #screenLockerLightningFrame {
                text-align: center;
                border: 1px solid black;
                background-color: rgba(255, 255, 255, 0.75);
                border-radius: 10px;
            }
            .envBox{
                height: 44px;
            }
            .envBox h3{
                padding: 0;
                padding-left: 5px;
            }
            .envBox p{
                color: darkgray;
                float: left;
                padding-left: 5px;
            }
            /* Raised effect â€“ pushes up on hover */
            .paper-raise:before {
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
            }
            .paper-raise:not([disabled]):hover {
              color:black !important;
              background-color: #d9e5f8;
            }
            .paper-raise:hover:before {
              box-shadow: 0 15px 10px -10px rgba(31, 31, 31, 0.5);
            }

            #myInsext .insext-active .insext-popup {

            }
            #myInsext.insext-active .myinsext-btn {
                padding: 5px;
                left : 278px;
                box-shadow: rgb(160, 166, 171) 2px 0px 2px;
            }
            #myInsext .myinsext-btn {
                float: left;
                top: 50%;
                left: 0;
                border: 1px solid #0070d2;
                border-radius: 0 5px 5px 0;
                border-left: none;
                box-sizing: border-box;
                width: 40px;
                position: fixed;
                background-color: white;
                box-shadow: rgb(160, 166, 171) -2px 0px 2px;
                padding: 5px;
                z-index: 999;
                display: block;
            }
            #boxCanvas{
                background-color: transparent;
            }

            .bgActive{
                background-image: linear-gradient(0deg, transparent 24%, lightgray 25%, lightgray 26%, transparent 27%, transparent 74%, lightgray 75%, lightgray 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, lightgray 25%, lightgray 26%, transparent 27%, transparent 74%, lightgray 75%, lightgray 76%, transparent 77%, transparent);
                background-size: 17px 15px;
            }
            #overlay {
                box-sizing: border-box;
                position: fixed;
                display: none;
                box-shadow: rgba(0, 0, 0, 0.16) 0px -5px 10px 7px;
                left: 0;
                top: 25%;
                bottom: 0;
                height: 347px;
                background-color: rgb(255, 255, 255);
                border-radius: 4px 0px 4px 4px;
                border-width: 1px;
                border-style: solid;
                border-color: rgb(216, 221, 230);
                border-image: initial;
                z-index: 999;
                cursor: pointer;
            }
            #errormessagediv {
                box-sizing: border-box;
                position: fixed;
                display: inline-block;
                top: 0;
                left: 5%;
                width: 50%;
                background-color: rgb(255, 255, 255);
                border-radius: 4px 0px 4px 4px;
                border-width: 0px;
                border-style: solid;
                border-color: rgb(216, 221, 230);
                border-image: initial;
                background: transparent;
            }

            .legendID {
              display: inline-block;
              vertical-align: top;
              text-align: left;
            }

            .legend {
              list-style-type: none;
              padding: 0;
              margin: 0;
              padding: 15px;
              font-size: 11px;
            }
            #legendPanel {
                margin: 10px 10px 10px 0px;
                padding: 10px;
                background:  white;
            }
            .legend li {
              height: 1.25em;
              margin-bottom: 0.7em;
              padding-left: 0.5em;
              border-left: 1.25em solid black;
            }
            .legend em {
              font-style: normal;
            }

        </style>
        <apex:outputPanel layout="none" rendered="{!calculationBase != 'Branch'}">
            <style>
                #myInsext.insext-active .myinsext-btn {
                    padding: 5px;
                    left : 278px;
                    box-shadow: rgb(160, 166, 171) 2px 0px 2px;
                }

            </style>
        </apex:outputPanel>
        <script type="text/javascript">
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            $copado(document).ready(function(){
                overridePageMessages();
            })

        </script>
        <c:IncludeConnectionJsComponent />
        <c:ShowWebhook url="webhook/branchStatuses" recordId="{!copado__Deployment_Flow__c.Id}" />
    </head>

    <c:IframeLocker url="" />
    <apex:outputField value="{!copado__Deployment_Flow__c.copado__Flow_Step_Coordinates__c}" rendered="false" />
    <apex:outputField value="{!copado__Deployment_Flow__c.copado__Main_Branch__c}" rendered="false" />
    <apex:outputField value="{!copado__Deployment_Flow__c.copado__Git_Repository__c}" rendered="false" />
    <body class="slds-scope">
    <apex:form id="Lightningform">

        <apex:outputPanel id="mainPanel">
            <div style="width:150px; left: 5px; position:fixed;">
                <button id="toggleBG" class="slds-button slds-button_neutral" onclick="toggleBackground();return false;" name="Toggle Background">
                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                        <use
                                xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!JSENCODE(URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#preview'))}">
                        </use>
                        <span class="slds-assistive-text">Toggle background grid view</span>
                    </svg>
                </button>
            </div>
            <div style="width:60%; right: 15px; position:fixed;">
                <c:JobsManager matchingKeys="{!jobsManagerMatchingKeys}"></c:JobsManager>
            </div>
            <div id="screenLockerLightning" class="slds-screenlocker">
                <div id="screenLockerLightningFrame">
                    <img style="width: 100px;" src="{!URLFOR($Resource.SLDS,'/assets/images/spinners/slds_spinner_brand.gif')}" />
                    <p id="screenLockerLightningText"></p>
                    <br /><br />
                    <a href="#" onclick="setLockScreenMessage(); return false;">{!$Label.HIDE_MESSAGE}</a>
                </div>
            </div>
            <c:ScreenLocker msg="" />

            <apex:outputPanel id="globalWrapper">
                <script type="text/javascript">
                    var copadoApp = {
                        ns: '{!JSENCODE(namespace)}',
                        data: {
                            flowId: '{!JSENCODE(copado__Deployment_Flow__c.Id)}',
                            __coordinates__: '{!JSENCODE(copado__Deployment_Flow__c.copado__Flow_Step_Coordinates__c)}',
                            mainBranch: '{!JSENCODE(copado__Deployment_Flow__c.copado__Main_Branch__c)}',
                            repositoryId: '{!JSENCODE(copado__Deployment_Flow__c.copado__Git_Repository__c)}',
                            allNotificationMatchingKeys: '{!JSENCODE(JobsManagerMatchingKeys)}',
                            calculationBasedOn: '{!JSENCODE(copado__Deployment_Flow__c.copado__Calculate_Based_on__c)}'
                        },
                        envConnections: [],
                        environments: [],
                        urlParameters: '{!JSENCODE(urlParameters)}',
                        lightningSpinner: '{!URLFOR($Resource.copado__SLDS,"/assets/images/spinners/slds_spinner_brand.gif")}',

                    };

                </script>

                <div id="errormessagediv">
                    <apex:pageMessages id="canvasMessage" />
                </div>

                <div id="myInsext" class="">
                    <div class="myinsext-btn" style="outline:0;cursor:pointer;" onclick="toogle();" tabindex="0" accesskey="i" title="Show additional operations...">
                        <center>
                            <img height="20" width="20" src="{!URLFOR($Resource.Statics,'img/icons/logo-icon.png')}" />
                        </center>
                    </div>
                    <div id="overlay" class="insext-popup">
                        <div style="padding-top:30px; padding-left: 10px">
                            <div class="slds-form">
                                <div class="slds-form-element" style="margin-top: 10px">
                                    <apex:outputPanel rendered="{!AND(!hideCalcBackPromotionButtons,stepMapJSON != 'false')}">
                                        <input type="button" class="btn slds-button slds-button_neutral" onclick="backDeploy.recalculate(this);toogle();" value="{!IF(Deployment_Flow__c.Calculate_based_on__c != 'User Story','Recalculate','Refresh')}" />
                                    </apex:outputPanel>
                                    <!--Don't display hook url for deployment flow with calculate based on user story-->
                                    <apex:outputPanel rendered="{!copado__Deployment_Flow__c.copado__Calculate_Based_on__c != 'User Story'}">
                                        <button type="button" id="btnShowHookUrl" class="btn slds-button slds-button_neutral" onclick="showWebhook(); return false;">{!$Label.Show_Hook_URL}</button>
                                    </apex:outputPanel>
                                </div>
                                <div class="slds-form-element" style="margin-top: 10px">
                                    <div class="slds-form-element__control">
                                          <span class="slds-checkbox">
                                            <input type="checkbox" name="showEnvCI" onclick="backDeploy.showHideCIEnvironments(this.checked);" id="envAutoComplete" value="on" />
                                            <label class="slds-checkbox__label" for="envAutoComplete">
                                                <span class="slds-checkbox_faux"></span>
                                                <span class="slds-form-element__label">{!$Label.Show_Continuous_Integrations}</span>
                                            </label>
                                          </span>
                                    </div>
                                </div>
                                <div class="slds-form-element" style="margin-top: 10px">
                                    <button type="button" id="showLogs" class="btn slds-button slds-button_neutral" onclick="showLogsModal(); return false;">{!$Label.Latest_Sync_Results}</button>
                                </div>
                                <apex:outputPanel rendered="{!AND(!hideCalcBackPromotionButtons,stepMapJSON != 'false')}">
                                    <div class="slds-form-element" style="margin-top: 10px">
                                        <button type="button" id="massBackPromote" class="btn slds-button slds-button_neutral" onclick="lock();openRebaseModal();toogle(); return false;">{!$Label.Mass_Back_Promote}</button>
                                    </div>
                                </apex:outputPanel>
                                <div class="slds-form-element" style="margin-top: 10px">
                                    <button type="button" id="showEvars" class="btn slds-button slds-button_neutral" onclick="showVarModal(); return false;">{!$Label.SEnvVar}</button>
                                </div>
                            </div>
                            <apex:outputPanel layout="none" rendered="{!calculationBase == 'Branch'}">
                                <input type="hidden" id="bcalbase" value="Branch" />
                                <div id="legendPanel">
                                    <ul class="legendID legend">
                                        <li style="border-left: 1.25em solid green">
                                            <em>
                                                {!$Label.Valid_for_Deployment}
                                            </em>
                                        </li>
                                        <li style="border-left: 1.25em solid yellow">
                                            <em>
                                                {!$Label.Needs_Recalculation}
                                            </em>
                                        </li>
                                        <li style="border-left: 1.25em solid red">
                                            <em>
                                                {!$Label.Has_Deployment_Errors}
                                            </em>
                                        </li>
                                        <li style="border-left: 1.25em solid gray">
                                            <em>{!$Label.In_Sync}</em>
                                        </li>
                                    </ul>
                                </div>
                            </apex:outputPanel>
                            <apex:outputPanel layout="none" rendered="{!calculationBase != 'Branch'}">
                                <input type="hidden" id="ucalbase" value="User Story" />
                                <div id="legendPanel">
                                    <ul class="legendID legend">
                                        <!--<li style="border-left: 1.25em solid green">
                                            <em>
                                                {!$Label.All_Validated}
                                            </em>
                                        </li>
                                        <li style="border-left: 1.25em solid yellow">
                                            <em>
                                                {!$Label.Some_Not_Validated}
                                            </em>
                                        </li>
                                        <li style="border-left: 1.25em solid red">
                                            <em>
                                                {!$Label.Not_Validated}
                                            </em>
                                        </li>-->
                                        <li style="border-left: 1.25em solid #00A3E0">
                                            <em>{!$Label.Available_User_Story}</em>
                                        </li>
                                        <li style="border-left: 1.25em solid rgb(245, 246, 250)">
                                            <em>{!$Label.No_User_Story}</em>
                                        </li>
                                    </ul>
                                </div>
                            </apex:outputPanel>
                            <div class="slds-grid">
                                <div class="slds-col">
                                    <apex:outputPanel layout="block" id="warningMessagesPageBlockSection">
                                        <script type="text/javascript">
                                            window.warningMessagesPageBlockSectionId = '{!$Component.warningMessagesPageBlockSection}';
                                            document.getElementById(window.warningMessagesPageBlockSectionId).style.display='none';

                                        </script>
                                        <div id="warningMessages"></div>
                                    </apex:outputPanel>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <a name="canvasLocation" style="display:none;">toplink</a>
                <!-- Canvas Div -->
                <div id="boxCanvas" class="bgActive"></div>
            </apex:outputPanel>

            <script type="text/javascript" src="{!URLFOR($Resource.backDeploy) }"></script>
            <script type="text/javascript" src="{!URLFOR($Resource.localStreamingService) }"></script>
            <script type="text/javascript">
                backDeploy.config.ns = copadoApp.ns;
                backDeploy.config.fileName = 'PROGRESS_STATUS_COPADO';
                backDeploy.config.imageUrl.loading = '{!URLFOR($Resource.Statics,"img/icons/loading.gif")}';
                backDeploy.config.imageUrl.confirm = '{!URLFOR($Resource.Statics,"img/icons/confirm16.png")}';
                backDeploy.config.imageUrl.error = '{!URLFOR($Resource.Statics,"img/icons/error16.png")}';
                backDeploy.config.imageUrl.lookup = '{!URLFOR($Resource.Statics,"img/icons/view.png")}';
                backDeploy.config.imageUrl.spacer = '{!URLFOR($Resource.Statics,"img/icons/s.gif")}';
                backDeploy.config.herokuServer = '{!herokuServer}';
                backDeploy.config.currentUserId = '{!$User.Id}';
                backDeploy.labels.AHEAD = 'ahead';
                backDeploy.labels.BEHIND = 'behind';
                backDeploy.labels.ACTION_BUTTON_LABEL = 'Submit';
                backDeploy.labels.LOADING = 'Loading';
                backDeploy.labels.NAME = 'Name';
                backDeploy.labels.BRANCH = 'Branch';
                backDeploy.labels.TEST_LEVEL = 'Test Level';
                backDeploy.labels.AUTO_MERGE_DEPLOY = 'Auto Merge & Deploy';
                backDeploy.labels.YES = 'Yes';
                backDeploy.labels.NO = 'No';
                backDeploy.labels.NEXT_ENVIRONMENT = 'Next Environment';
                backDeploy.labels.MORE_DETAILS = 'More Details';
                backDeploy.labels.IN_SYNC = 'In Sync';
                backDeploy.labels.noStep = '{!JSENCODE($Label.DF_NO_STEP)}';
                backDeploy.labels.noSource = '{!JSENCODE($Label.NO_SOURCE_ENV_DF_STEP)}';
                backDeploy.labels.noDestination = '{!JSENCODE($Label.NO_DESTINATION_ENV_DF_STEP)}';

                backDeploy.SVG_INSYNC_CHECKBOX = '<svg class="slds-button__icon slds-button__icon_left" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}"></use></svg>';
                backDeploy.SVG_ARROW_RIGHT = '<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#forward')}"></use></svg>';
                backDeploy.SVG_ARROW_LEFT = '<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#back')}"></use></svg>';

                console.info('Assigning step details...');
                backDeploy.config.map = {!(stepMapJSON)};

                // comment out to remove javascript alert for no step error
                //if(backDeploy.config.map === false){
                    //alert(backDeploy.labels.noStep);
                //}

                $copado( document ).ready(function() {
                    copadoStreamingService.ns = copadoApp.ns;
                    copadoStreamingService.init();
                    //unlock();
                    backDeploy.loadPage();
                    localStreamingService.data.parentId = copadoApp.data.flowId;
                    localStreamingService.data.childrenArray = backDeploy.data.stepIds;
                    localStreamingService.data.readStatusFromAttachmentCB = backDeploy.statusHandler;
                    localStreamingService.config.ns = copadoApp.ns;
                    localStreamingService.config.attachmentFileName = 'PROGRESS_STATUS_COPADO';

                    $copado.cometd.subscribe('/topic/CopadoNotifications', function(message) {
                        //console.info('Push message: ', message);
                        localStreamingService.readStream(message);
                    });
                    window.onbeforeunload = copadoStreamingService.disconnect;
                    onResize('init');
                });

                function toogle(){
                    if(document.getElementById("overlay").style.display.indexOf("block") > -1){
                        document.getElementById("overlay").style.display = "none";
                        $copado('#myInsext').removeClass('insext-active');
                    }else{
                        document.getElementById("overlay").style.display = "inline-block";
                        $copado('#myInsext').addClass('insext-active');
                        $copado('#insext-popup').focus();
                    }
                }
                function toggleBackground(){
                    var $canvas = $copado('#boxCanvas');
                    if($canvas.hasClass('bgActive')){
                        $canvas.removeClass('bgActive');
                    }else{
                        $canvas.addClass('bgActive');
                    }
                }

                function onResize(calledFrom){
                    var $win = $copado(window);
                    var $doc = $copado(document);
                    var flowSize = calculateFlowSize();
                    $copado('#boxCanvas').css('height',flowSize.top);
                    $copado('#boxCanvas').css('width',flowSize.left);
                    //console.info('Window size: ', $win.width(), $win.height());
                    //console.info('Flow size: ', flowSize.left, flowSize.top);
                    //console.info('Doc size: ', $doc.width(), $doc.height());

                    $canvas = $copado("#boxCanvas canvas");
                    if(flowSize.left <=  $win.width()){
                        $canvas.prop('width',  $win.width());
                        $copado('#boxCanvas').css('width',$win.width());
                        $doc.css('width',$win.width());
                    }else{
                        $canvas.prop('width',  flowSize.left);
                        $copado('#boxCanvas').css('width',flowSize.left);
                        $doc.css('width',flowSize.left);
                    }
                    if(flowSize.top <=  $win.height()){
                        $canvas.prop('height',  $win.height());
                        $copado('#boxCanvas').css('height',$win.height());
                        $doc.css('height',$win.height());
                    }else{
                         $canvas.prop('height',  flowSize.top);
                         $copado('#boxCanvas').css('height',flowSize.top);
                         $doc.css('height',flowSize.top);
                    }

                    // Avoid drawing, since init or loading the page will do it in a few seconds.
                    if(calledFrom!=='init')
                        backDeploy.drawEnvironmentBoxes();
                }
                function calculateFlowSize(){
                    var records = JsRemoting.deploymentFlows.getFlowStepCoordinates(backDeploy.config.ns, backDeploy.data.flowId);
                    var__coordinates__ = records[0][backDeploy.config.ns+'Branch_Management_Coordinates__c'];
                    if(__coordinates__ && __coordinates__.length != 0){
                        var tmp = (__coordinates__).split(',');
                        var left = 0;
                        var top = 0;
                        for(var i=0; i<tmp.length; i++){
                            var tmp2 = tmp[i].split('-');
                            left = parseInt(tmp2[1]) > left ? parseInt(tmp2[1]) : left;
                            top = parseInt(tmp2[2]) > top ? parseInt(tmp2[2]) : top;
                        }
                        return {'left':left+350, 'top':top+150};
                    }else{
                        return {'left':0, 'top':0};
                    }
                }
                var timer;
                $copado(window).on('resize', function(){
                    timer && clearTimeout(timer);
                    timer = setTimeout(onResize, 100);
                });

                ga('send', 'pageview', {
                  'page': '/BranchManagement',
                  'title': 'Branch Management'
                });

                var mStart = mStart || '';
                var oWidth = oWidth || '';

                CalculateWidth = function(elem, e) {
                    var childObj = $copado(elem).children().first();
                    var parObj = childObj.parents().first();
                    var count = 1;

                    while(parObj.prop("tagName") != 'TH') {
                        parObj = parObj.parents().first();
                        count++;
                    }

                    var mouseStart=e.clientX;
                    mStart = mouseStart;
                    oWidth = parObj.outerWidth();
                };

                SetNewWidth = function(elem, e) {
                    var childObj = $copado(elem).children().first();
                    var parObj = childObj.parents().first();
                    var count = 1;

                    while(parObj.prop("tagName") != 'TH') {
                        parObj = parObj.parents().first();
                        count++;
                    }

                    var mouseStart = mStart;
                    var oldWidth = oWidth

                    if(e.clientX > 0){
                        var newWidth = e.clientX- parseFloat(mouseStart)+parseFloat(oldWidth);
                        parObj.width(newWidth);
                    }
                }

                $copado('#boxCanvas').on('click',function(){
                    document.getElementById("overlay").style.display = "none";
                    $copado('#myInsext').removeClass('insext-active');
                });

                function overridePageMessages(cb){

                    textureEffect = 'slds-theme--alert-texture';

                    $copado('.warningM3').addClass('slds-notify slds-notify--toast slds-theme--warning customMessage '+textureEffect);
                    $copado('.confirmM3').addClass('slds-notify slds-notify--alert slds-theme--success  customMessage '+textureEffect);
                    $copado('.errorM3').addClass('slds-notify slds-notify--alert slds-theme--error customMessage '+textureEffect);
                    $copado('.infoM3').addClass('slds-notify slds-notify--toast slds-theme--info customMessage '+textureEffect);

                    $copado('.errorM3').removeClass('errorM3');
                    $copado('.confirmM3').removeClass('confirmM3');
                    $copado('.infoM3').removeClass('infoM3');
                    $copado('.warningM3').removeClass('warningM3');

                    $copado('.message').css('margin',0);
                    $copado('.message').css('margin-top',10);
                    $copado('.message').css('font-size','11pt');
                    $copado('.messageText').css('color','white');
                    $copado('.messageText h4').css('color','white');
                    $copado('.messageTable ul').css('color','white');

                    //***UCU : unlockScreen when a page message returns from apex side pageReference method
                    if($copado('div.message.customMessage').length > 0){
                        unlockScreen();
                    }

                    if(cb) cb();
                }

                function setStepJSON(){
                    var core = copadoApp.ns ? window[copadoApp.ns.split('__')[0]] : window;
                    (core).BranchManagementExtension.getAllStepDetails(
                        copadoApp.data.flowId,
                        function(result,event){
                            if (event.status) {
                                console.log(result);
                                backDeploy.config.map = result;
                                backDeploy.rerender();
                                backDeploy.polling.jobsInProgress = false;
                            }else if(event.status === 'exception') {
                                console.error(result);
                                alert(result)
                            }else{
                                console.warn(result);
                                alert(result)
                            }
                        }
                    );
                    //backDeploy.config.map = getStepDetails();
                }

                function setLockScreenMessage(msg) {
                    console.debug('setLockScreenMessage()', msg);
                    var eltext = $copado('#screenLockerLightningText'),  eltLock = $copado('#screenLockerLightning');
                    if(msg) {
                        eltext.text(msg);
                        eltLock.show();
                    }else{
                        eltext.text('');
                        eltLock.hide();
                    }
                }

                var unlock = function() {
                    setLockScreenMessage('');
                };
                var lock = function() {
                    setLockScreenMessage('Loading...');
                };

            </script>
        </apex:outputPanel>
        <!--  oncomplete="setTimeout(setStepJSON(),500);" -->
        <apex:actionFunction name="renderBoxes" reRender="Lightningform" />

        <!-- Continuous Integration Notes -->
        <div id="logsPanel">
            <section role="dialog" tabindex="-1" id="logsModal" aria-labelledby="modal-heading-01" aria-describedby="modal-content-id-1" class="slds-modal slds-modal_medium">
                <div class="slds-modal__container" style="width: 60% !important;">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.CLOSE}" onclick="closeLogsModal();return false;">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use
                                        xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}">
                                </use>
                            </svg>
                            <span class="slds-assistive-text">{!$Label.copado__CLOSE}</span>
                        </button>
                        <apex:outputPanel id="Notes" layout="block">
                            <h2 id="logsHeaderText" class="slds-text-heading_medium slds-hyphenate">
                                <apex:outputText value="{!$Label.copado__LATEST_SYNC_LOGS}" />
                            </h2>
                        </apex:outputPanel>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1" s1tyle="height: 99%;">
                        <div id="window" style="width:100%">
                            <div class="slds-grid">
                                <div class="slds-col">
                                    <apex:outputPanel layout="block" id="lastSyncResult">
                                        <div id="syncLogs"></div>
                                        <script>try{ twistSection(document.getElementById('{!$Component.lastSyncResult}').getElementsByTagName('img')[0]); }catch(e){ console.warn('logs faillure'+e); }</script>
                                    </apex:outputPanel>
                                </div>

                            </div>
                        </div>
                    </div>
                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral" onclick="closeLogsModal(); return false;">{!$Label.Cancel}</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop" id="logsBackdrop"></div>

        </div>
        <!-- END OF Continuous Integration Notes -->

        <!-- Environment Variables for all environments -->
        <div id="eVarPanel">
            <section role="dialog" tabindex="-1" id="eVarModal" aria-labelledby="modal-heading-01" aria-describedby="modal-content-id-1" class="slds-modal slds-modal_medium">
                <div class="slds-modal__container" style="width: 60% !important;max-width:50rem;">
                    <header class="slds-modal__header" style="border-bottom: 0px;">
                        <div style="max-height:750px !important;overflow-x:scroll;">
                            <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.CLOSE}" onclick="closeVarModal();return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use
                                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}">
                                    </use>
                                </svg>
                                <span class="slds-assistive-text">{!$Label.copado__CLOSE}</span>
                            </button>
                            <apex:outputPanel id="EnvVarH" layout="block">
                                <table id="dt4dt">
                                    <thead>
                                    <tr>
                                        <td class="slds-modal__header">
                                            <center>
                                                <h2 id="VarHeaderText" class="slds-text-heading_medium slds-hyphenate">
                                                    <apex:outputText value="{!$Label.copado__VarEnv}" />
                                                </h2>
                                            </center>
                                        </td>
                                        <td class="slds-modal__header">
                                            <center>
                                                <h2 id="VarHeaderText" class="slds-text-heading_medium slds-hyphenate">
                                                    <apex:outputText value="{!$Label.copado__VarName}" />
                                                </h2>
                                            </center>
                                        </td>
                                        <td class="slds-modal__header">
                                            <center>
                                                <h2 id="VarHeaderText" class="slds-text-heading_medium slds-hyphenate">
                                                    <apex:outputText value="{!$Label.copado__VarVal}" />
                                                </h2>
                                            </center>
                                        </td>
                                    </tr>
                                    </thead>
                                    <apex:outputPanel rendered="{!envVarList.size>0}">
                                        <tbody>
                                        <apex:variable value="{!1}" var="count" />
                                        <apex:repeat value="{!envId_envVarsMap}" var="envList">
                                            <apex:repeat value="{!envId_envVarsMap[envList]}" var="env">
                                                <tr>
                                                    <td style="{!if(count==1,'padding-top:20px;','padding-top:3px;')}">
                                                        <center>
                                                            <apex:outputText value="{!env.environment__r.name}" />
                                                        </center>
                                                    </td>
                                                    <td style="{!if(count==1,'padding-top:20px;','padding-top:3px;')}">
                                                        <center>
                                                            <apex:outputText value="{!env.name}" />
                                                        </center>
                                                    </td>
                                                    <td style="{!if(count==1,'padding-top:20px;','padding-top:3px;')}">
                                                        <center>
                                                            <apex:outputText value="{!env.value__c}" />
                                                        </center>
                                                    </td>
                                                </tr>
                                                <apex:variable value="{!count+1}" var="count" />
                                            </apex:repeat>
                                            <apex:variable value="{!1}" var="count" />
                                        </apex:repeat>
                                        </tbody>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!envVarList.size<1}">
                                        <tr>
                                            <td colspan="3" style="padding-top:20px;">
                                                <center>
                                                    {!$Label.copado__NoEnvVar}
                                                </center>
                                            </td>
                                        </tr>
                                    </apex:outputPanel>
                                </table>
                                <script>
                                    function rerenderDatatable() {
                                        $copado('#dt4dt').DataTable();
                                        $copado('input[aria-controls$=dt4dt]').attr('placeholder','use "" for exact search');
                                    }

                                </script>
                            </apex:outputPanel>
                        </div>
                    </header>

                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral" onclick="closeVarModal(); return false;">{!$Label.Cancel}</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop" id="eVarBackdrop"></div>

        </div>
        <!-- END OF Environment Variables for all environments -->

        <!-- Rebase Panel -->
        <apex:outputPanel layout="block">
            <section role="dialog" tabindex="-1" id="rebaseModal" aria-labelledby="modal-heading-01" aria-describedby="modal-content-id-1" class="slds-modal slds-modal_large">
                <apex:outputPanel id="rebaseMainRender" layout="block">
                    <apex:actionFunction name="rebasePromotionsRender" reRender="createdPromotionButtons" oncomplete="unlock();" />
                    <apex:outputPanel id="rebasePromotionsCheck" layout="none" rendered="{!rebasePromotionsCreated}">
                        <script type="text/javascript">
                            $copado(
                                function() {
                                    console.log('self execution:::');
                                    openRebasePromotionsPanel();
                                    rebasePromotionsRender();
                                    setTimeout(function(){closeRebaseModal();console.log('self execution:::2');},1000);
                                }
                            );

                        </script>
                    </apex:outputPanel>
                    <apex:outputPanel layout="none" rendered="{!rebasePromotionsCreated}">
                        <script type="text/javascript">
                            $copado(
                                function() {
                                    rebasePromotionsRender();
                                }
                            );

                        </script>
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:outputPanel id="rebaseMain" layout="none">
                    <div class="slds-modal__container" style="min-height:75% !important;width: 99% !important;">
                        <header class="slds-modal__header">
                            <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.CLOSE}" onclick="closeRebaseModal();return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use
                                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}">
                                    </use>
                                </svg>
                                <span class="slds-assistive-text">{!$Label.copado__CLOSE}</span>
                            </button>
                            <apex:outputPanel id="rebaseHeader" layout="block">
                                <h2 id="logsHeaderText" class="slds-text-heading_medium slds-hyphenate">
                                    <span>{!$Label.MASS_BACK_PROMOTE_USER_STORIES}</span>
                                </h2>
                                <apex:pageMessages id="rebaseMessage" />
                            </apex:outputPanel>
                        </header>
                        <apex:outputPanel styleClass="slds-modal__content slds-p-around_medium" id="rebaseModalContent">
                            <div id="window" style="width:100%">
                                <div class="slds-grid" style="padding-bottom: 10px;">
                                    <div class="slds-col" style="width: 0%;">
                                        <label class="slds-form-element__label" for="rebaseSourceList">
                                            <span>{!$Label.copado__SOURCE_ENVIRONMENT}</span>
                                        </label>
                                        <apex:selectList id="rebaseSourceList" html-data-id="rebaseSourceList" value="{!rebaseSource}" multiselect="false" size="1" styleClass="slds-select">
                                            <apex:selectOptions value="{!rebaseSourceEnvironments}" />
                                            <apex:actionSupport oncomplete="renderUsToggle(false);renderEnvToggle(false);renderOvrToggle(false);unlock();" action="{!getRebaseUserStories}" event="onchange" onsubmit="lock();" reRender="rebaseEnvironments,rebasePromotionButtons,projectRelease,tableButtons" />
                                        </apex:selectList>
                                    </div>
                                    <div class="slds-col">&nbsp;</div> <!-- empty column for column/row alignment -->
                                </div>
                                <apex:outputPanel id="projectRelease" styleClass="slds-grid" style="padding-bottom: 15px;">
                                    <div class="slds-col" style="padding-right: 10px;">
                                        <label class="slds-form-element__label" for="projectPicklist">
                                            {!$ObjectType.copado__Promotion__c.fields.copado__Project__c.Label}
                                        </label>
                                        <apex:selectList id="projectPicklist" html-data-id="promotionProject" value="{!rebaseProject}" multiselect="false" size="1" styleClass="slds-select">
                                            <apex:selectOptions value="{!projects}" />
                                            <apex:actionSupport oncomplete="renderUsToggle(false);renderEnvToggle(false);renderOvrToggle(false);unlock();" action="{!getRebaseUserStories}" event="onchange" onsubmit="lock();" reRender="rebaseEnvironments,rebasePromotionButtons,tableButtons" />
                                        </apex:selectList>
                                    </div>
                                    <div class="slds-col" style="padding-left: 10px;">
                                        <label class="slds-form-element__label" for="releasePicklist">
                                            {!$ObjectType.copado__Promotion__c.fields.copado__Release__c.Label}
                                        </label>
                                        <apex:selectList id="releasePicklist" html-data-id="promotionRelease" value="{!rebaseRelease}" multiselect="false" size="1" styleClass="slds-select">
                                            <apex:selectOptions value="{!releases}" />
                                            <apex:actionSupport oncomplete="renderUsToggle(false);renderEnvToggle(false);renderOvrToggle(false);" action="{!getRebaseUserStories}" event="onchange" reRender="rebaseEnvironments,rebasePromotionButtons,tableButtons" />
                                        </apex:selectList>
                                    </div>
                                </apex:outputPanel>

                                <div>
                                    <apex:outputPanel id="tableButtons" layout="block">
                                        <apex:outputPanel layout="block" rendered="{!AND(rebaseUserStoriesWrapper.size > 0, OR(AND(NOT(ISNULL(rebaseProject)), rebaseProject != '--None--'),AND(NOT(ISNULL(rebaseRelease)), rebaseRelease != '--None--')))}">
                                            <div class="slds-grid" style="padding-bottom: 15px;">
                                                <div class="slds-col">
                                                    <apex:commandLink html-data-isSelected="false" html-data-type="US" value="{!$Label.copado__Unselect_All_User_Stories}" onclick="renderUsToggle(true)" immediate="true" styleClass="slds-button slds-button_brand slds-path__mark-complete slds-m-horizontal_small" id="toggleUSSelection" reRender="xxx">
                                                        <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#add')}">
                                                            </use>
                                                        </svg>
                                                    </apex:commandLink>
                                                    <apex:commandLink html-data-isSelected="false" html-data-type="ENV" value="{!$Label.copado__Unselect_All_Environments}" onclick="renderEnvToggle(true);" immediate="true" styleClass="slds-button slds-button_brand slds-path__mark-complete slds-m-horizontal_small" id="toggleEnvSelection" reRender="xxx">
                                                        <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#add')}">
                                                            </use>
                                                        </svg>
                                                    </apex:commandLink>
                                                    <apex:commandLink html-data-isSelected="true" html-data-type="OVR" value="{!$Label.copado__Enable_Auto_Selection}" onclick="lock();renderOvrToggle(true);" immediate="true" styleClass="slds-button slds-button_success slds-path__mark-complete slds-m-horizontal_small" id="toggleOverwriteSelection" action="{!toggleRebaseListView}" reRender="rebasePromotionButtons" oncomplete="unlock();">
                                                        <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#touch_action')}">
                                                            </use>
                                                        </svg>
                                                    </apex:commandLink>
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <apex:outputPanel id="rebaseEnvironments" layout="block">
                                        <apex:outputPanel layout="block" rendered="{!AND(rebaseSources.size > 0,rebaselistView == false)}">
                                            <div style="overflow-x: scroll;overflow-y: scroll;height: 100%;width: 100%;">
                                                <table class="slds-table slds-table_resizable-cols slds-table_bordered slds-table_striped">
                                                    <thead>
                                                    <tr>
                                                        <th class="headcol" style="width: 3%;padding-left: 8px;">
                                                            <!-- REMINDER : Decided to remove this functionality for now -->
                                                            <input type="checkbox" name="selectAll" title="" style="border:1px solid orange;display: none;" onchange="selectEverythinginRebase($copado(this))" checked="checked" />
                                                        </th>
                                                        <!--TODO: In the next release use below repeat
                                                            Mass_Back_Promote_FieldSet field set is not in BP so in order to
                                                            patch mass promotion feature following lines are commented out -->
                                                        <!--<apex:repeat value="{!$ObjectType.User_Story__c.FieldSets.Mass_Back_Promote_FieldSet}" var="f">
                                                                        <th class="headcol" style="text-align: left;{!IF(f=='Name','width: 10%;','width: 20%;')}padding-left: 15px;">
                                                                             <apex:outputText value="{!f.Label}" />
                                                                        </th>
                                                                    </apex:repeat>-->
                                                        <th class="headcol" style="text-align: left;width: 10%;padding-left: 15px;">
                                                            <apex:outputText value="User Story Reference" />
                                                        </th>
                                                        <th class="headcol" style="text-align: left;width: 20%;padding-left: 15px;">
                                                            <apex:outputText value="User Story Title" />
                                                        </th>
                                                        <apex:repeat value="{!rebaseSources}" var="rebaseOrg">
                                                            <th style="text-align: center;font-weight: bold;">
                                                                <apex:inputCheckbox value="{!rebaseOrg.isSelected}" html-name="{!rebaseOrg.step.copado__Source_Environment__c}" html-data-chb-type="environment" onchange="selectAllRebaseEnvironments($copado(this))" />
                                                                <apex:outputText style="margin-left: 2px" value="{!rebaseOrg.step.Source_Environment__r.Name}" />
                                                            </th>
                                                        </apex:repeat>
                                                    </tr>
                                                    </thead>
                                                    <tbody>
                                                    <apex:repeat value="{!rebaseUserStoriesWrapper}" var="us">
                                                        <tr>
                                                            <th class="headcol">
                                                                <apex:inputCheckbox id="usCheckbox" value="{!us.isSelected}" html-name="{!us.userStory.Id}" html-data-chb-type="userStory" onchange="selectAllRebaseUserStories($copado(this))" />
                                                            </th>
                                                            <th class="headcol" style="text-align: left;width: 20%;overflow-wrap: break-word;">
                                                                <div class="slds-truncate" title="User Story Reference">
                                                                    <a href="/{!us.userStory['Id']}" target="_blank">
                                                                        <apex:outputText value="{!us.userStory['Name']}" />
                                                                    </a>
                                                                </div>
                                                            </th>
                                                            <th class="headcol" style="text-align: left;width: 20%;overflow-wrap: break-word;">
                                                                <div class="slds-truncate" title="User Story Title">
                                                                    {!us.userStory.copado__User_Story_Title__c}
                                                                </div>
                                                            </th>
                                                            <apex:repeat value="{!rebaseSources}" var="rebaseOrg">
                                                                <td style="text-align: center;">
                                                                    <apex:inputCheckbox disabled="{!NOT(OR(usEnvironmentAvailabilityMap[us.userStory.Id][rebaseOrg.step.copado__Source_Environment__c].isAvailable,showHiddenCheckboxes))}" style="{!IF(NOT(OR(usEnvironmentAvailabilityMap[us.userStory.Id][rebaseOrg.step.copado__Source_Environment__c].isAvailable,showHiddenCheckboxes)),'filter: invert(75%);','')}" html-data-envId="{!rebaseOrg.step.copado__Source_Environment__c}" html-data-usId="{!us.userStory.Id}" value="{!usEnvironmentAvailabilityMap[us.userStory.Id][rebaseOrg.step.copado__Source_Environment__c].isSelected}"
                                                                                        html-data-defualt-disabled="{!NOT(usEnvironmentAvailabilityMap[us.userStory.Id][rebaseOrg.step.copado__Source_Environment__c].isAvailable)}" />
                                                                </td>
                                                            </apex:repeat>
                                                        </tr>
                                                    </apex:repeat>
                                                    </tbody>
                                                </table>
                                            </div>

                                            <apex:outputPanel rendered="{!rebaseUserStoriesWrapper.size == 0}">
                                                <center>
                                                    <p>
                                                        <apex:outputText value="No user story to be selected" />
                                                    </p> <!-- TODO: Relace hardcoded value with NO_US_TO_SELECT}" -->
                                                </center>
                                            </apex:outputPanel>

                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </div>
                            </div>

                        </apex:outputPanel>
                        <footer class="slds-modal__footer">
                            <apex:actionFunction action="{!createRebasePromotions}" name="createRebasePromotions" reRender="rebaseMessage,rebaseMainRender,rebaseEnvironments,rebasePromotionsPanel,createdPromotionButtons" oncomplete="unlock();overridePageMessages();" />
                            <apex:actionFunction action="{!createRebasePromotionsAndDeploy}" name="createRebasePromotionsAndDeploy" reRender="rebaseMessage,rebaseMainRender,rebaseEnvironments,rebasePromotionsPanel,createdPromotionButtons" oncomplete="unlock();overridePageMessages();" />
                            <apex:outputPanel id="rebasePromotionButtons" layout="block">
                                <apex:outputText value="{!$Label.copado__MASS_BP_DISABLE_AUTOSELECT_WARNING}" style="text-align: left;color:orange;" rendered="{!showHiddenCheckboxes}" />

                                <apex:outputPanel rendered="{!AND(rebaseUserStoriesWrapper.size > 0, OR(AND(NOT(ISNULL(rebaseProject)), rebaseProject != '--None--'),AND(NOT(ISNULL(rebaseRelease)), rebaseRelease != '--None--')))}" layout="none" id="rebaseButtons">
                                    <apex:commandLink action="{!goToPromotions}" rendered="{!rebasePromotionKeySize > 0}" target="_blank" value="{!$Label.copado__Go_To_Promotions}" onclick="lock();" styleClass="slds-button slds-button_neutral slds-path__mark-complete slds-m-horizontal_small" oncomplete="unlock();" reRender="rebaseMainRender" />

                                    <apex:commandLink target="_blank" value="{!$Label.copado__CREATE} {!promotionBtnLabel}" onclick="lock();" styleClass="slds-button slds-button_brand slds-path__mark-complete slds-m-horizontal_small" id="createRebasePromotions" oncomplete="createRebasePromotions();" reRender="xx" />

                                    <apex:commandLink target="_blank" value="{!$Label.copado__CREATE} {!promotionBtnLabel} & Deploy" onclick="lock();" styleClass="slds-button slds-button_success slds-path__mark-complete slds-m-horizontal_small" id="createRebasePromotionsAndDeploy" oncomplete="createRebasePromotionsAndDeploy();" reRender="xx" />

                                    <button class="slds-button slds-button_neutral slds-path__mark-complete" onclick="closeRebaseModal(); return false;">{!$Label.copado__Cancel}</button>
                                </apex:outputPanel>
                                <apex:outputPanel layout="block" rendered="{!rebaseUserStoriesWrapper.size == 0}">
                                    <apex:commandLink action="{!goToPromotions}" rendered="{!rebasePromotionKeySize > 0}" target="_blank" value="Go to promotions" onclick="lock();" styleClass="slds-button slds-button_neutral slds-path__mark-complete slds-m-horizontal_small" oncomplete="unlock();" reRender="rebaseMainRender" />

                                    <button class="slds-button slds-button_neutral slds-path__mark-complete" onclick="closeRebaseModal(); return false;">{!$Label.copado__Cancel}</button>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </footer>
                    </div>
                </apex:outputPanel>


            </section>
            <div class="slds-backdrop" id="rebaseBackdrop"></div>

        </apex:outputPanel>
        <!-- END OF Rebase Panel -->
        <!-- Rebase Promotions Panel -->

        <apex:outputPanel layout="block">
            <section role="dialog" tabindex="-1" id="rebasePromotionsModal" class="slds-modal slds-modal_large">
                <div class="slds-modal__container" style="width: 99% !important;">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.CLOSE}" onclick="closeRebasePromotionsModal();return false;">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use
                                        xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}">
                                </use>
                            </svg>
                            <span class="slds-assistive-text">{!$Label.copado__CLOSE}</span>
                        </button>
                        <apex:outputPanel id="rebasePromotionsHeader" layout="block">
                            <h2 id="logsHeaderText" class="slds-text-heading_medium slds-hyphenate">
                                <apex:outputText value="{!$Label.copado__CREATED_BACK_PROMOTIONS}" />
                            </h2>
                        </apex:outputPanel>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1" style="min-height: 84%;">
                        <apex:outputPanel layout="block" id="rebasePromotionsPanel">
                            <apex:actionPoller action="{!checkRebasePromotionsStatuses}" id="rebasePromotionPoller" enabled="{!enabledRebasePromotionPoller}" interval="10" reRender="rebasePromotionsPanel,rebasePromotionPoller" />
                            <table class="slds-table slds-table_resizable-cols slds-table_fixed-layout slds-table_bordered slds-table_striped">
                                <thead>
                                <tr>
                                    <!--TODO : Below code will be enabled with v11 we need to include ManageBranchesDialog fieldset into package-->
                                    <!--<apex:repeat value="{!$ObjectType.Promotion__c.FieldSets.ManageBranchesDialog}" var="pf">
                                                    <td>
                                                        <b><apex:outputText value="{!pf.Label}" /></b>
                                                    </td>                                                    
                                                </apex:repeat>-->
                                    <td>
                                        <apex:outputLabel value="{!$ObjectType.copado__Promotion__c.fields.Name.Label}" />
                                    </td>
                                    <td>
                                        <apex:outputLabel value="{!$ObjectType.copado__Promotion__c.fields.copado__Destination_Environment__c.Label}" />
                                    </td>
                                    <td>
                                        <apex:outputLabel value="{!$ObjectType.copado__Promotion__c.fields.copado__Source_Environment__c.Label}" />
                                    </td>
                                    <td>
                                        <apex:outputLabel value="{!$ObjectType.copado__Promotion__c.fields.copado__Project__c.Label}" />
                                    </td>
                                    <td>
                                        <apex:outputLabel value="{!$ObjectType.copado__Promotion__c.fields.copado__Release__c.Label}" />
                                    </td>
                                    <td>
                                        <apex:outputLabel value="{!$ObjectType.copado__Promotion__c.fields.copado__Status__c.Label}" />
                                    </td>
                                    <apex:outputPanel layout="none" rendered="{!AND(!promotionOnly,OR(enabledRebasePromotionPoller,rebaseDeploymentsCompleted))}">
                                        <td style="text-align: center;">
                                            <b>Deployment Status</b> <!--TODO: Create custom label for this one -->
                                        </td>
                                    </apex:outputPanel>
                                </tr>
                                </thead>
                                <tbody>
                                <apex:repeat var="promotion" value="{!rebasePromotionsMap}">
                                    <tr>
                                        <!--TODO : Below code will be enabled with v11 we need to include ManageBranchesDialog fieldset into package-->
                                        <!--<apex:repeat value="{!$ObjectType.Promotion__c.FieldSets.ManageBranchesDialog}" var="pf">
                                                        <td>
                                                            <c:LightningReadyOutputFields SObject="{!rebasePromotionsMap[promotion]}" Field="{!pf}" showLabel="false" dividerBottom="false" customClass="pfFields" isViewLink="{!if(pf=='Name',true,false)}" htmlTarget="_blank" />
                                                        </td>
                                                    </apex:repeat>-->
                                        <td>
                                            <a href="/{!rebasePromotionsMap[promotion].Id}" target="_blank">
                                                <apex:outputText value="{!rebasePromotionsMap[promotion].Name}" />
                                            </a>
                                        </td>
                                        <td>
                                            {!rebasePromotionsMap[promotion].Destination_Environment__c}
                                        </td>
                                        <td>
                                            {!rebasePromotionsMap[promotion].Source_Environment__c}
                                        </td>
                                        <td>
                                            {!rebasePromotionsMap[promotion].Project__c}
                                        </td>
                                        <td>
                                            {!rebasePromotionsMap[promotion].Release__c}
                                        </td>
                                        <td>
                                            {!rebasePromotionsMap[promotion].Status__c}
                                        </td>
                                        <apex:outputPanel layout="none" rendered="{!AND(!promotionOnly,OR(enabledRebasePromotionPoller,rebaseDeploymentsCompleted))}">
                                            <td style="text-align: center;">
                                                <apex:outputPanel layout="none" rendered="{!rebasePromotionsMap[promotion].Status__c == 'Scheduled'}">
                                                    <div id="statusImg" class="slds-icon_container">
                                                        <svg class="slds-icon slds-icon_small slds-icon-text-default" aria-hidden="true">
                                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clock')}">
                                                            </use>
                                                        </svg>
                                                    </div>
                                                    <script type="text/javascript">
                                                        $copado(function(){
                                                            var item = $copado('[Id$=statusImg]');
                                                            item.html("");
                                                            var imageURL = "{!URLFOR($Resource.copado__SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clock')}";
                                                            var SVG = $copado('<svg/>', {
                                                                class: 'slds-icon slds-icon_small slds-icon-text-default',
                                                            });
                                                            var SVGUse = $copado('<use/>');
                                                            SVGUse.attr('xlink:href', imageURL);
                                                            item.prepend(SVG.append(SVGUse));
                                                            item.html(item.html());
                                                        });

                                                    </script>
                                                </apex:outputPanel>
                                                <apex:outputPanel layout="none" rendered="{!rebasePromotionsMap[promotion].Status__c == 'In Progress'}">
                                                    <img id="statusImg" style="width: 20px;" src="{!URLFOR($Resource.SLDS,'/assets/images/spinners/slds_spinner_brand.gif')}" />
                                                </apex:outputPanel>
                                                <apex:outputPanel layout="none" rendered="{!rebasePromotionsMap[promotion].Status__c == 'Completed'}">
                                                    <div id="statusImgApproval" class="slds-icon_container">
                                                        <svg class="slds-icon slds-icon_small slds-icon-text-default" aria-hidden="true">
                                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#approval')}">
                                                            </use>
                                                        </svg>
                                                    </div>
                                                    <script type="text/javascript">
                                                        $copado(function(){
                                                            var item = $copado('[Id$=statusImgApproval]');
                                                            item.html("");
                                                            var imageURL = "{!URLFOR($Resource.copado__SLDS,'/assets/icons/action-sprite/svg/symbols.svg#approval')}";
                                                            var SVG = $copado('<svg/>', {
                                                                class: 'slds-icon slds-icon_small slds-icon-text-default',
                                                            });
                                                            var SVGUse = $copado('<use/>');
                                                            SVGUse.attr('xlink:href', imageURL);
                                                            item.prepend(SVG.append(SVGUse));
                                                            item.html(item.html());
                                                        });

                                                    </script>
                                                </apex:outputPanel>
                                                <apex:outputPanel layout="none" rendered="{!rebasePromotionsMap[promotion].Status__c == 'Completed with errors'}">
                                                    <div id="statusImgClose" class="slds-icon_container">
                                                        <svg class="slds-icon slds-icon_x-small slds-icon-text-default" aria-hidden="true">
                                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#close')}">
                                                            </use>
                                                        </svg>
                                                    </div>
                                                    <script type="text/javascript">
                                                        $copado(function(){
                                                            var item = $copado('[Id$=statusImgClose]');
                                                            item.html("");
                                                            var imageURL = "{!URLFOR($Resource.copado__SLDS,'/assets/icons/action-sprite/svg/symbols.svg#close')}";
                                                            var SVG = $copado('<svg/>', {
                                                                class: 'slds-icon slds-icon_small slds-icon-text-default',
                                                            });
                                                            var SVGUse = $copado('<use/>');
                                                            SVGUse.attr('xlink:href', imageURL);
                                                            item.prepend(SVG.append(SVGUse));
                                                            item.html(item.html());
                                                        });

                                                    </script>
                                                </apex:outputPanel>
                                            </td>
                                        </apex:outputPanel>
                                    </tr>
                                </apex:repeat>
                                </tbody>
                            </table>
                        </apex:outputPanel>
                    </div>

                    <footer class="slds-modal__footer">
                        <apex:actionFunction name="resetPromotions" action="{!resetPromotions}" immediate="true" oncomplete="openRebaseModal();closeRebasePromotionsModal();unlock();" reRender="rebasePromotionButtons" />
                        <apex:actionFunction name="deployPromotions" action="{!deployPromotions}" reRender="rebasePromotionsPanel" oncomplete="reRenderDeploy();" />
                        <apex:actionFunction name="reRenderDeploy" reRender="createdPromotionButtons" />
                        <apex:outputPanel id="createdPromotionButtons" layout="block">
                            <apex:outputPanel rendered="{!!promotionOnly}">
                                <button class="slds-button slds-button_neutral slds-path__mark-complete" onclick="closeRebasePromotionsModal(); return false;">{!$Label.copado__CLOSE}</button>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!promotionOnly}">
                                <button class="slds-button slds-button_neutral slds-path__mark-complete" onclick="lock();resetPromotions(); return false;">{!$Label.copado__Prepare_Another_Promotion}</button>
                                <button class="slds-button slds-button_neutral slds-path__mark-complete" onclick="deployPromotions(); return false;">{!$Label.copado__Deploy_Promotions}</button>
                                <button class="slds-button slds-button_neutral slds-path__mark-complete" onclick="closeRebasePromotionsModal(); return false;">{!$Label.copado__CLOSE}</button>
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop" id="rebasePromotionsBackdrop"></div>
        </apex:outputPanel>
        <!-- END OF Rebase Promotions Panel -->
    </apex:form>










    <c:IncludeStaticsResourceComponent addJQuery="true" addDVcss="true" addDVjs="true" addDLjs="true" />

    <script>
        function openModal(elem) {
            window.setTimeout(lock, 5); // to force redrawing.

            var stepId = $copado(elem).attr('data-flowStepId');

            backDeploy.processAttachments('openModal', stepId);

            backDeploy.uiData = backDeploy.uiData || {};
            backDeploy.uiData.fromEnvId = $copado(elem).attr('data-from');
            backDeploy.uiData.toEnvId = $copado(elem).attr('data-to');
            backDeploy.uiData.envId = $copado(elem).attr('data-envId');
            backDeploy.uiData.type = $copado(elem).attr('data-type');
            backDeploy.uiData.stepId = stepId;
            backDeploy.uiData.flowId = $copado(elem).attr('data-flowId');
            backDeploy.uiData.flowResult = JSON.stringify(backDeploy.data.results[backDeploy.uiData.flowId]);
            backDeploy.uiData.stepResult = JSON.stringify(backDeploy.data.results[backDeploy.uiData.stepId]);
            backDeploy.uiData.toBranch = $copado('#wrapper_' + backDeploy.uiData.toEnvId).attr('data-branch');
            backDeploy.uiData.fromBranch = $copado('#wrapper_' + backDeploy.uiData.fromEnvId).attr('data-branch');
            console.assert(backDeploy.uiData.fromEnvId, 'backDeploy.uiData.fromEnvId' );
            console.assert(backDeploy.uiData.toEnvId, 'backDeploy.uiData.toEnvId' );
            console.assert(backDeploy.uiData.toBranch, 'backDeploy.uiData.toBranch' );
            console.assert(backDeploy.uiData.fromBranch, 'backDeploy.uiData.fromBranch' );

            prepareOverlay(backDeploy.uiData.fromEnvId, backDeploy.uiData.toEnvId, backDeploy.uiData.envId, backDeploy.uiData.type, backDeploy.uiData.stepId, backDeploy.uiData.flowId, backDeploy.uiData.stepResult);
            return false;
        };

        function showModal() {
            setTimeout(function() {
                $copado('#backdrop').addClass('slds-backdrop--open');
                $copado('#modal').addClass('slds-fade-in-open');
            }, 500);
        };

        function showLogsModal(elem) {
            setTimeout(function() {
                $copado('#logsBackdrop').addClass('slds-backdrop--open');
                $copado('#logsModal').addClass('slds-fade-in-open');
                unlock();
            }, 500);
        };

        function showFileModal(elem) {
            backDeploy.diff.showDiff(elem);
            setTimeout(function() {
                $copado('#fileBackdrop').addClass('slds-backdrop--open');
                $copado('#fileModal').addClass('slds-fade-in-open');
                unlock();
            }, 500);
        };

        function showVarModal() {
            setTimeout(function() {
                $copado('#eVarBackdrop').addClass('slds-backdrop--open');
                $copado('#eVarModal').addClass('slds-fade-in-open');
                rerenderDatatable();
                unlock();
            }, 500);
        };
        function closeVarModal() {
            $copado('#eVarModal').removeClass('slds-fade-in-open');
            $copado('#eVarBackdrop').removeClass('slds-backdrop--open');
            return false;
        }
        //Modal Close
        function closeModal() {
            $copado('#modal').removeClass('slds-fade-in-open');
            $copado('#backdrop').removeClass('slds-backdrop--open');
            resetModalDOM();
            return false;
        }

        function closeFileModal() {
            $copado('#fileModal').removeClass('slds-fade-in-open');
            $copado('#fileBackdrop').removeClass('slds-backdrop--open');
            //resetModalDOM();
            return false;
        }

        function closeLogsModal() {
            $copado('#logsModal').removeClass('slds-fade-in-open');
            $copado('#logsBackdrop').removeClass('slds-backdrop--open');
            //resetModalDOM();
            return false;
        }
        function openRebaseModal(){
            prepareRebase();
        }
        function showRebaseModal(elem) {
            console.log('showRebaseModal:::',{!IsRebasePromotionsCreated});
            if ({!IsRebasePromotionsCreated}) {
                console.log('showRebaseModal:::1');
                openRebasePromotionsPanel();
            } else{
                console.log('showRebaseModal:::2');
                setTimeout(function() {
                    $copado('#rebaseBackdrop').addClass('slds-backdrop--open');
                    $copado('#rebaseModal').addClass('slds-fade-in-open');
                    unlock();
                }, 500);
            }
        };
        function closeRebasePromotionsModal(){
            $copado('#rebasePromotionsModal').removeClass('slds-fade-in-open');
            $copado('#rebasePromotionsBackdrop').removeClass('slds-backdrop--open');
            return false;
        }
        function openRebasePromotionsPanel() {
            $copado('#rebasePromotionsModal').addClass('slds-fade-in-open');
            $copado('#rebasePromotionsBackdrop').addClass('slds-backdrop--open');
            return false;
        }
        function closeRebaseModal() {
            $copado('#rebaseModal').removeClass('slds-fade-in-open');
            $copado('#rebaseBackdrop').removeClass('slds-backdrop--open');
            return false;
        }

        function openUSDep(){
            // $copado('[id$=dependencyUSComponent]').show();
            $copado('#USbackdrop').addClass('slds-backdrop--open');
            $copado('#dependencyUSComponentSection').addClass('slds-fade-in-open');

        }
        function closeUSDep(){
            $copado('#USbackdrop').removeClass('slds-backdrop--open');
            $copado('#dependencyUSComponentSection').removeClass('slds-fade-in-open');
            // $copado('[id$=dependencyUSComponent]').hide();
            return false;
        }

        function selectAllRebaseUserStories(elem){
            var userStoryId = $copado(elem).attr('name')
            $copado('input[data-usId="'+userStoryId+'"]').each(function(){
                if(!$copado(this).prop('disabled')){
                    $copado(this).prop('checked', $copado(elem).prop('checked'));
                }
            })
        }
        function selectAllRebaseEnvironments(elem){
            var envId = $copado(elem).attr('name')
            $copado('input[data-envId="'+envId+'"]').each(function(){
                if(!$copado(this).prop('disabled')){
                    $copado(this).prop('checked', $copado(elem).prop('checked'));
                }
            })
        }
        function selectAllRebaseUserStoryBoxes(isChecked){
            $copado('input[data-chb-type="userStory"]').each(function(){
                $copado(this).prop('checked', isChecked);
                selectAllRebaseUserStories($copado(this));
            })
        }
        function selectAllRebaseEnvironmentBoxes(isChecked){
            $copado('input[data-chb-type="environment"]').each(function(){
                $copado(this).prop('checked',isChecked);
                selectAllRebaseEnvironments($copado(this));
            })
        }
        function selectEverythinginRebase(elem){
            var isChecked = $copado(elem).prop('checked');
            //selectAllRebaseUserStoryBoxes(isChecked);
            //selectAllRebaseEnvironmentBoxes(isChecked);
            renderUsToggle(true);
            renderEnvToggle(true);

        }

        function syncCommits() {

            var a = backDeploy.uiData.fromEnvId, b = backDeploy.uiData.toEnvId;
            console.debug("syncCommits()",a,b);
            // If it is a pull (so, a syncback), we need to invert the "fromEnvId-toEnvId" key
            /*if(backDeploy.uiData.type === 'pull') {
                a = backDeploy.uiData.toEnvId;
                b = backDeploy.uiData.fromEnvId;
            }*/
            var jobDidStart = backDeploy.callHerokuAction(a, b, backDeploy.uiData.type);
            if(jobDidStart) {
                var att = globalJobsManagerStart(backDeploy.data.flowId, 'gitBranchSync', 'GIT-'+copadoApp.data.repositoryId+'-'+backDeploy.uiData.toBranch);
                closeModal();
            }
        }
        function toggleRebaseAlgorithm(isChecked){
            console.log('toggleRebaseAlgorithm:::isChecked',isChecked);
            $copado('input[data-defualt-disabled=true]').each(function(){
                console.log('toggleRebaseAlgorithm:::elem',$copado(this));
                if(isChecked){
                    $copado(this).attr('disabled',isChecked);
                    $copado(this).css('filter','invert(75%)');
                } else {
                    $copado(this).removeAttr("disabled");
                    $copado(this).css('filter','invert(0%)');
                }
            })
        }
        function renderUsToggle(isClicked){
            console.info('rendering user story button');
            var item = $copado('[Id$=toggleUSSelection]');
            var imageURL = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#threedots_vertical'))}";
            var SVG = $copado('<svg/>', {
                class: 'slds-button__icon slds-button__icon_left',
            });
            var SVGUse = $copado('<use/>');
            var isSideList = item.attr('data-isSelected');
            console.log('isClicked',isSideList, isClicked);
            if(isSideList === "true"){
                SVGUse.attr('xlink:href', imageURL);
                if(isClicked){
                    $copado('input[name$=selectAll]').prop('checked',true);
                    selectAllRebaseUserStoryBoxes(true);
                    item.attr('data-isSelected',false);
                    item.text('{!JSENCODE($Label.copado__Unselect_All_User_Stories)}');
                    item.removeClass('slds-button_neutral').addClass('slds-button_brand');
                }
                item.prepend(SVG.append(SVGUse));
                item.html(item.html());
            } else {
                SVGUse.attr('xlink:href', imageURL);
                if(isClicked){
                    $copado('input[name$=selectAll]').prop('checked',false);
                    selectAllRebaseUserStoryBoxes(false);
                    item.attr('data-isSelected',true);
                    item.text('{!JSENCODE($Label.copado__Select_All_User_Stories)}');
                    item.addClass('slds-button_neutral').removeClass('slds-button_brand');
                }
                item.prepend(SVG.append(SVGUse));
                item.html(item.html());

            }
            console.log('item',item);
        }
        function renderEnvToggle(isClicked){
            console.info('rendering environment button');
            var item = $copado('[Id$=toggleEnvSelection]');
            var imageURL2 = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#threedots'))}";
            var SVG = $copado('<svg/>', {
                class: 'slds-button__icon slds-button__icon_left',
            });
            var SVGUse = $copado('<use/>');
            var isSideList = item.attr('data-isSelected');
            if(isSideList === "true"){
                SVGUse.attr('xlink:href', imageURL2);
                if(isClicked){
                    selectAllRebaseEnvironmentBoxes(true);
                    item.attr('data-isSelected',false);
                    item.text('{!JSENCODE($Label.copado__Unselect_All_Environments)}');
                    item.removeClass('slds-button_neutral').addClass('slds-button_brand');
                }
                item.prepend(SVG.append(SVGUse));
                item.html(item.html());

            } else {
                SVGUse.attr('xlink:href', imageURL2);
                if(isClicked){
                    selectAllRebaseEnvironmentBoxes(false);
                    item.attr('data-isSelected',true);
                    item.text('{!JSENCODE($Label.copado__Select_All_Environments)}');
                    item.addClass('slds-button_neutral').removeClass('slds-button_brand');
                }
                item.prepend(SVG.append(SVGUse));
                item.html(item.html());

            }
        }
        function renderOvrToggle(isClicked){
            console.info('rendering Overwrite button');
            var item = $copado('[Id$=toggleOverwriteSelection]');
            var imageURL3 = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#edit'))}";
            var imageURL4 = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#magicwand'))}";
            var SVG = $copado('<svg/>', {
                class: 'slds-button__icon slds-button__icon_left',
            });
            var SVGUse = $copado('<use/>');
            var isSideList = item.attr('data-isSelected');
            console.log('isSideList',isSideList);
            console.log('item.html(',item.html());
            item.html("");
            if(isSideList === "true"){
                SVGUse.attr('xlink:href', imageURL4);
                if(isClicked){
                    console.log('renderOvrToggle:::toggleRebaseAlgorithm:::',true);
                    toggleRebaseAlgorithm(true);
                }
                item.attr('data-isSelected',false);
                item.text('{!JSENCODE($Label.copado__Disable_Auto_Selection_Overwrite)}');
                item.removeClass('slds-button_destructive').addClass('slds-button_success');
                item.prepend(SVG.append(SVGUse));
                item.html(item.html());
            }else{
                SVGUse.attr('xlink:href', imageURL3);
                if(isClicked){
                    console.log('renderOvrToggle:::toggleRebaseAlgorithm:::',false);
                    toggleRebaseAlgorithm(false);
                }
                item.attr('data-isSelected',true);
                item.text('{!JSENCODE($Label.copado__Enable_Auto_Selection_Overwrite)}')
                item.removeClass('slds-button_success').addClass('slds-button_destructive');
                item.prepend(SVG.append(SVGUse));
                item.html(item.html());
            }
        }
        function renderSVGArrow() {
            var imageURL = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#forward'))}";
            var imageURL2 = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#upload'))}";
            var imageURL3 = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#warning'))}";
            var SVG = $copado('<svg/>', {
                class: 'slds-button__icon slds-button__icon_left',
            });
            var SVGWarn = $copado('<svg/>', {
                class: 'slds-icon slds-icon-text-warning slds-icon_small',
            });

            var SVGUse = $copado('<use/>');
            SVGUse.attr('xlink:href', imageURL);
            $copado('[Id$=createPromotion]').prepend(SVG.append(SVGUse));
            $copado('[Id$=createPromotion]').html($copado('[Id$=createPromotion]').html());

            SVGUse.attr('xlink:href', imageURL2);
            $copado('[Id$=createPromotionAndDeploy]').prepend(SVG.append(SVGUse));
            $copado('[Id$=createPromotionAndDeploy]').html($copado('[Id$=createPromotionAndDeploy]').html());

            SVGUse.attr('xlink:href', imageURL3);
            $copado('[Id$=warningLink]').prepend(SVGWarn.append(SVGUse));
            $copado('[Id$=warningLink]').html($copado('[Id$=warningLink]').html());

            if($copado('[Id$=warningLink]').is(':visible')){
                $copado('[Id$=createPromotionAndDeploy]').addClass('WarningColor');
            }else{
                $copado('[Id$=createPromotionAndDeploy]').removeClass('WarningColor');
            }

        }

        function renderSVGFlow() {
            var imageURL = "{!JSENCODE(URLFOR($Resource.copado__SLDS, '/assets/icons/action-sprite/svg/symbols.svg#flow'))}";
            var SVG = $copado('<svg/>', {
                class: 'slds-button__icon slds-button__icon_left',
            });

            var SVGUse = $copado('<use/>');
            SVGUse.attr('xlink:href', imageURL);
            $copado('#btn_sync').prepend(SVG.append(SVGUse));
            $copado('#btn_sync').html($copado('#btn_sync').html());
        }

        function reRenderFromContextSelector(obj, type) {
            backDeploy.config.contextSize = parseInt(obj.value);
            backDeploy.diff.renderDiff(type);
            $copado('.js-context').val(obj.value);
        }

        function reRenderFromRenderOption(obj, type) {
            backDeploy.config.viewType = parseInt(obj.value);
            backDeploy.diff.renderDiff(type);
            $copado('.js-viewType').val(obj.value);
        }

        function bindSelectAll() {
            $copado('#selectAll').on('change', function(e) {
                var table = $copado(e.target).closest('table');
                $copado('td input:checkbox', table).prop('checked', $copado(this).prop('checked'));

                setTimeout(function() {
                    calcDepUS();
                }, 1000);

            });

        }


        function bindLookupChanges() {
            if ($copado('[data-id$=promotionProject]').val() != '') {
                $copado('[data-id$=promotionRelease]').attr('disabled', true);

            } else if ($copado('[data-id$=promotionRelease]').val() != '') {
                $copado('[data-id$=promotionProject]').attr('disabled', true);
            }

            $copado('[data-id$=promotionProject]').on('change', function(e) {
                console.log('Project selection changed');
                lock();
                getUserStories();
            });


            $copado('[data-id$=promotionRelease]').on('change', function(e) {
                console.log('Release selection changed');
                lock();
                getUserStories();
            });
        }

        backDeploy.bindings.bindMergeErrorShowDiff = function() {
            $copado('#div-m-eFileList').off('click');
            $copado('#div-m-eFileList').on('click', '.js-show-diff', backDeploy.diff.showDiff); //, {type:'merge'}
        };
        backDeploy.bindings.bindPullErrorShowDiff = function() {
            $copado('#div-p-eFileList').off('click');
            $copado('#div-p-eFileList').on('click', '.js-show-diff', backDeploy.diff.showDiff); //, {type:'merge'}
        };
        backDeploy.bindings.bindMergeMergedShowDiff = function() {
            $copado('#div-m-mFileList').off('click');
            $copado('#div-m-mFileList').on('click', '.js-show-diff', backDeploy.diff.showDiff); //, {type:'merge'}
        };
        backDeploy.bindings.bindPullMergedShowDiff = function() {
            $copado('#div-p-mFileList').off('click');
            $copado('#div-p-mFileList').on('click', '.js-show-diff', backDeploy.diff.showDiff); //, {type:'merge'}
        };
        backDeploy.bindings.bindbehindShowDiff = function() {
            $copado('#behindFileList').off('click');
            $copado('#behindFileList').on('click', '.js-show-diff', backDeploy.diff.showDiff);
        };
        backDeploy.bindings.bindaheadShowDiff = function() {
            $copado('#aheadFileList').off('click');
            $copado('#aheadFileList').on('click', '.js-show-diff', backDeploy.diff.showDiff);
        };
        backDeploy.bindings.bindActions = function() {
            backDeploy.bindings.bindbehindShowDiff();
            backDeploy.bindings.bindaheadShowDiff();
            backDeploy.bindings.bindPullErrorShowDiff();
            backDeploy.bindings.bindMergeErrorShowDiff();
        };


        // DIFF namespace
        backDeploy.diff.getDiffIndex = function(obj, type) {
            if (obj) {
                if (type == 'pull' && obj && obj.filesMergedBehind && obj.filesMergedBehind.length > 0) return obj.filesMergedBehind;
                if (type == 'merge' && obj && obj.filesMergedAhead && obj.filesMergedAhead.length > 0) return obj.filesMergedAhead;
            }
            return [];
        };
        backDeploy.diff.getDivId = function(type) {
            var divId = '';
            if (type == 'pull') divId = 'behind';
            if (type == 'merge') divId = 'ahead';
            if (type == 'div-p-m' || type == 'div-p-e') divId = type;
            if (type == 'div-m-m' || type == 'div-m-e') divId = type;
            return divId;
        };

        /**
         * get attachment, unzip content
         * then search the file name (this must be full relative name)
         * finally returns file content as text
         * @param  {[type]} fileName   [description]
         * @param  {[type]} attachName [description]
         * @param  {[type]} parentId   [description]
         * @return {[type]}            [description]
         */
        backDeploy.diff.getZippedFileContentByName = function(fileName, attachName, parentId) {
            var att = null;
            try {
                if (fileName == '') {
                    alert('A filename was not selected to be retrieved from the Zip file.');
                    return '';
                }
                att = JsRemoting.attachments.getAttachmentByFileName(parentId, attachName);
                if (!att.length)
                    return '';
                if(!att[0].Body)
                    return '';
                var zip = new JSZip(att[0].Body, {
                    base64: true
                });
                var content = zip.file(fileName);
                if(content===null) {
                    console.error(attachName, "the content was not parsed by the zip library");
                    return '';
                }
                return content.asText();
            } catch (error) {
                console.error(attachName, error);
                unlockScreen();
                alert(error);
                return '';
            }
        };

        /**
         * This method should recover the source and destination zips
         * then uncompress it
         * and finally call show detailed diff popup
         * @return {[type]} [description]
         */
        backDeploy.diff.showDiff = function(elem) {
            console.log('show diff started ...');
            //setLockScreenMessage(backDeploy.labels.LOADING);
            //lockScreen();
            setLockScreenMessage('Loading diff information...');
            try {
                $el = $copado(elem);
                setTimeout(function() {
                    backDeploy.diff.retrieveContent($el)
                }, 33);
            } catch (error) {
                console.error(error);
                unlockScreen();
                alert(error);
            }
        };

        /**
         * helper to avoid ui render engine freeze
         * @return {[type]} [description]
         */
        backDeploy.diff.retrieveContent = function($el) {
            //recover file name from event
            var me = backDeploy;
            //recover first string from wrapper div
            //fileName = $el.parent().text().replace('Show Differences','');
            fileName = $el.attr('file-name');
            var type = $el.attr('data-type');
            me.data.FlowStepPressed = $el.attr('data-stepId');
            console.info('retrieving content with type...',type);
            if (type == 'merge') {
                console.log('Unzip merge content...');
                me.config.leftContent = me.diff.getZippedFileContentByName(fileName, type + 'Source.zip', me.data.FlowStepPressed);
                me.config.rightContent = me.diff.getZippedFileContentByName(fileName, type + 'Destination.zip', me.data.FlowStepPressed);
            } else if (type == 'pull') {
                console.log('Unzip pull content...');
                me.config.leftContent = me.diff.getZippedFileContentByName(fileName, type + 'Destination.zip', me.data.FlowStepPressed);
                me.config.rightContent = me.diff.getZippedFileContentByName(fileName, type + 'Source.zip', me.data.FlowStepPressed);
            } else if (type == 'div-p-m') {
                me.config.leftContent = me.diff.getZippedFileContentByName(fileName, 'pullMerged.zip', me.data.FlowStepPressed);
                me.config.rightContent = me.diff.getZippedFileContentByName(fileName, 'pullSource.zip', me.data.FlowStepPressed);
            } else if (type == 'div-m-m') {
                me.config.leftContent = me.diff.getZippedFileContentByName(fileName, 'mergeMerged.zip', me.data.FlowStepPressed);
                me.config.rightContent = me.diff.getZippedFileContentByName(fileName, 'mergeDestination.zip', me.data.FlowStepPressed);
            } else if (type == 'div-p-e') {
                me.config.leftContent = me.diff.getZippedFileContentByName(fileName, 'pullConflicts.zip', me.data.FlowStepPressed);
                me.config.rightContent = me.diff.getZippedFileContentByName(fileName, 'mergeConflicts.zip', me.data.FlowStepPressed);
            } else if (type == 'div-m-e') {
                me.config.leftContent = me.diff.getZippedFileContentByName(fileName, 'mergeConflicts.zip', me.data.FlowStepPressed);
                me.config.rightContent = me.diff.getZippedFileContentByName(fileName, 'pullConflicts.zip', me.data.FlowStepPressed);
            } else {
                console.warn('backDeploy.diff.retrieveContent type not found', type);
            }
            me.diff.renderDiff(type);
        };

        backDeploy.diff.renderDiff = function(type) {
            console.log('start rendering...');
            var byId = function(id) {
                    return document.getElementById(id);
                },
                baseText = difflib.stringAsLines(backDeploy.config.leftContent),
                newText = difflib.stringAsLines(backDeploy.config.rightContent),
                sm = new difflib.SequenceMatcher(baseText, newText),
                opcodes = sm.get_opcodes(),
                diffoutputdiv = $copado('div[id="' + backDeploy.diff.getDivId(type) + 'DiffWrapper"]')[0];


            diffoutputdiv.innerHTML = '';

            console.log('drawing content...');
            diffoutputdiv.appendChild(diffview.buildView({
                baseTextLines:  baseText ,
                newTextLines: newText,
                opcodes: opcodes,
                baseTextName:  backDeploy.uiData.fromBranch,
                newTextName:  backDeploy.uiData.toBranch,
                contextSize: backDeploy.config.contextSize,
                viewType: backDeploy.config.viewType,
            }));

            if (type == 'merge') {
                $copado('#div-ah-diff').show();
                $copado('#div-m-m').hide();
                $copado('#div-bh-diff').hide();
                $copado('#div-p-m').hide();
            } else if (type == 'pull') {
                $copado('#div-m-m').hide();
                $copado('#div-ah-diff').hide();
                $copado('#div-p-m').hide();
                $copado('#div-bh-diff').show();
            }else if(type == 'div-m-m'){
                $copado('#div-p-m').hide();
                $copado('#div-bh-diff').hide();
                $copado('#div-ah-diff').hide();
                $copado('#div-m-m').show();
            }
            else if(type == 'div-p-m'){
                $copado('#div-m-m').hide();
                $copado('#div-bh-diff').hide();
                $copado('#div-ah-diff').hide();
                $copado('#div-p-m').show();
            }
            var $head = $copado('#fileModalHeading');
            if ($head) {
                var branchName =  backDeploy.uiData.fromBranch+
                 ' vs. ' +
                  backDeploy.uiData.toBranch;
                $head.text(branchName);
            }
            setLockScreenMessage('');
        };

        function renderTable(){
            $copado('[Id$="userStoriesTable"]').dataTable({
                paging:false
            });
        }
        function renderTable4Selenium(){
            $copado('[Id$="seleniumsTable"]').dataTable({
                paging:false
            });
        }
        function renderTable4Compliance(){
            $copado('[Id$="compliancesTable"]').dataTable({
                paging:false
            });
        }
        function clearSearchFilter(){
            $copado('.dataTables_filter').find('input[type="search"]').val('').keyup();
        }

        function copadoNavigateToUrl(id, url, target) {
            // lightning/any other way to navigate
            if( (typeof sforce != 'undefined') && sforce && (!!sforce.one) ) {
                if(target != '_blank'){
                    sforce.one.navigateToSObject(id, 'detail');
                }else{
                    window.open('/lightning/r/' + id + '/view');
                }
            } else {
                if(target != undefined){
                    window.open(url, target);
                }else{
                    window.open(url, '_blank');
                }

            }
        }
    </script>

    <apex:form id="testting">
        <!--<apex:outputField value="{!promotion.copado__Project__c}" rendered="false" /><!-- NR to avoid vf NS issues -->

        <apex:actionFunction name="prepareOverlay" action="{!prepareOverlay}" oncomplete="errorsOverlay();">
            <apex:param name="fromEnvId" value="" />
            <apex:param name="toEnvId" value="" />
            <apex:param name="envId" value="" />
            <apex:param name="type" value="" />
            <apex:param name="stepId" value="" />
            <apex:param name="flowId" value="" />
            <apex:param name="stepResult" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="initUserStories" reRender="fieldSets,pins,GeneralActionButtons" action="{!showUserStories}" oncomplete="bindSelectAll();bindLookupChanges();renderSVGArrow();unlock();"/>
        <apex:actionFunction name="errorsOverlay" action="{!errorsOverlay}" oncomplete="userStoriesOverlay();" />
        <apex:actionFunction name="userStoriesOverlay" action="{!userStoriesOverlay}" reRender="pins,maodalHeader,path,fieldSets,GeneralActionButtons" oncomplete="initUserStories();showModal();backDeploy.calculateFileDifferences(JSON.parse(backDeploy.uiData.flowResult), {gridMode:'all'});" />
        <apex:actionFunction name="prepareRebase" action="{!prepareRebase}" reRender="rebaseModalContent,rebaseMainRender" oncomplete="showRebaseModal();">
        </apex:actionFunction>
        <apex:actionFunction name="getUserStories" action="{!getPromotableUserStories}" oncomplete="bindSelectAll();bindLookupChanges();renderSVGArrow();unlock();" reRender="fieldSets,GeneralActionButtons">
        </apex:actionFunction>
        <apex:actionFunction name="resetModalDOM" action="{!resetModalsDOM}" reRender="fileModal, modal, logsModal" />
        <apex:actionFunction name="calcDepUS" action="{!calculateUSDependencies}" reRender="cRrender,GeneralActionButtons" oncomplete="renderSVGArrow();" />
        <div id="operationModal">
            <section role="dialog" tabindex="-1" id="modal" aria-labelledby="modal-heading-01" aria-describedby="modal-content-id-1" class="slds-modal slds-modal_large">
                <div class="slds-modal__container" style="width: 99% !important;">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="closeModal();return false;">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use
                                        xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}">
                                </use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <apex:outputPanel id="path" layout="block">
                            <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate" style="{!IF(latestOverlay.pathType != 'merge','transform: rotate(180deg)','')}">
                                <!--TODO if back promote apply transform: rotate(180deg); to the style-->
                                <!--Modal Header Process path-->
                                <apex:outputPanel id="maodalHeader">
                                    <div class="slds-m-vertical_x-small">
                                        <div class="slds-grid">
                                            <div class="slds-tabs--path" role="application">
                                                <ul class="slds-tabs--path__nav" role="tablist">
                                                    <li class="slds-tabs--path__item slds-is-current" role="presentation">
                                                        <a class="slds-tabs--path__link" id="tabs-path-93" aria-controls="content-path-1" aria-selected="false" tabindex="-1" role="tab" href="javascript:void(0);" aria-live="assertive">
                                                    <span class="slds-tabs--path__title " style="{!IF(latestOverlay.pathType != 'merge','transform: rotate(180deg)','')}">
                                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType == 'merge'}">
                                                            {!latestOverlay.fromEnvName}
                                                           </apex:outputPanel>
                                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType != 'merge'}">
                                                            {!latestOverlay.toEnvName}
                                                        </apex:outputPanel>
                                                    </span>
                                                        </a>
                                                    </li>
                                                    <li class="slds-tabs--path__item slds-is-incomplete" role="presentation">
                                                        <a class="slds-tabs--path__link" id="tabs-path-93" aria-controls="content-path-1" aria-selected="false" tabindex="-1" role="tab" href="javascript:void(0);" aria-live="assertive">
                                                    <span class="slds-tabs--path__title " style="{!IF(latestOverlay.pathType != 'merge','transform: rotate(180deg)','')}">
                                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType == 'merge'}">
                                                            {!latestOverlay.toEnvName}
                                                        </apex:outputPanel>
                                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType != 'merge'}">
                                                            {!latestOverlay.fromEnvName}
                                                        </apex:outputPanel>
                                                    </span>
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                        <div style="{!IF(latestOverlay.pathType != 'merge','transform: rotate(180deg)','')}">
                                            <apex:pageMessages id="pageMessages" />
                                        </div>
                                    </div>
                                </apex:outputPanel>
                            </h2>
                        </apex:outputPanel>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1" style="min-height: 85%;">
                        <apex:outputPanel id="pins" layout="block" styleClass="slds-context-bar slds-is-pinned" style="width: 98%;position: absolute;z-index: 10;margin-top: -17px;overflow-x: scroll; ">
                            <div class="slds-context-bar__primary slds-context-bar__item_divider-right">
                                <div class="slds-context-bar__item slds-context-bar__item_divider-right">
                                <span class="slds-context-bar__label-action slds-context-bar__app-name">
                                <span class="slds-truncate" title="App Name">CBM Flow Step</span>
                                </span>
                                </div>
                            </div>
                            <nav class="slds-context-bar__secondary" role="navigation">
                                <ul class="slds-grid">
                                    <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showUserStories, 'background-color: rgb(244,246,249)','')}">
                                        <apex:commandLink style="text-decoration:none;" styleClass="slds-context-bar__label-action" reRender="fieldSets,pins,GeneralActionButtons" action="{!showUserStories}" onclick="lock();" oncomplete="bindSelectAll();bindLookupChanges();renderSVGArrow();unlock();">
                                        <span class="slds-truncate">
                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType == 'merge'}">
                                            {!$Label.copado__USER_STORIES_AHEAD} ({!allStorySize})
                                        </apex:outputPanel>
                                         <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType != 'merge'}">
                                            {!$Label.copado__USER_STORIES_BEHIND} ({!allStorySize})
                                        </apex:outputPanel>
                                    </span>
                                        </apex:commandLink>
                                    </li>
                                    <apex:outputPanel layout="none" rendered="{!AND(hideCommitTab,OR(AND(NOT(contains(disabledTabs,'commitsahead')),latestOverlay.pathType == 'merge'),AND(NOT(contains(disabledTabs,'commitsbehind')),latestOverlay.pathType != 'merge')))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showCommits, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showCommits}" oncomplete="renderSVGFlow();bindSelectAll();unlock();" onclick="lock();" reRender="fieldSets,pins,GeneralActionButtons">
                                            <span class="slds-truncate">
                                            <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType == 'merge'}">
                                                {!$Label.copado__COMMITS_AHEAD} (<span id="commAhead">0</span>)
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType != 'merge'}">
                                                {!$Label.copado__COMMITS_BEHIND} (<span id="commBehind">0</span>)
                                            </apex:outputPanel>
                                        </span>
                                            </apex:commandLink>
                                            <apex:inputHidden value="{!commAhead}" id="commitAheadNum" />
                                            <apex:inputHidden value="{!commBehind}" id="commitBehindNum" />
                                        </li>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!NOT(contains(disabledTabs,'deploymenterror'))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(AND(errorSize != null,errorSize > 0),'font-weight: bolder;','')};{!IF(showErrors, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showErrors}" onclick="lock();" oncomplete="unlock();" reRender="fieldSets,pins,GeneralActionButtons">
                                        <span class="slds-truncate">
                                        {!$Label.copado__DEPLOYMENT_ERRORS} ({!errorSize})
                                    </span>
                                            </apex:commandLink>
                                        </li>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!NOT(contains(disabledTabs,'filedifferences'))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showFileDifferences, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink onclick="lock();" oncomplete="unlock();" style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showFileDifferences}" reRender="fieldSets,pins,GeneralActionButtons">
                                        <span class="slds-truncate">
                                            {!$Label.copado__FILE_DIFFERENCES} (<span id="filediff">0</span>)
                                    </span>
                                            </apex:commandLink>
                                        </li>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!NOT(contains(disabledTabs,'autoresolvedconflicts'))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showAutoResolves, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink onclick="lock();" oncomplete="unlock();" style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showAutoResolves}" reRender="fieldSets,pins,GeneralActionButtons">
                                        <span class="slds-truncate">
                                        {!$Label.copado__AUTO_RESOLVED_CONFLICTS} (<span id="autoresolved">0</span>)
                                    </span>
                                            </apex:commandLink>
                                        </li>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!NOT(contains(disabledTabs,'mergedfiles'))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showMergeDifferences, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink onclick="lock();" oncomplete="unlock();" style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showMergeDifferences}" reRender="fieldSets,pins,GeneralActionButtons">
                                        <span class="slds-truncate">
                                            {!$Label.copado__MERGED_FILES} (<span id="mergeddiffsize">0</span>)
                                        </span>
                                            </apex:commandLink>
                                        </li>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!NOT(contains(disabledTabs,'seleniumtestgroups'))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showSeleniumResults, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink onclick="lock();" oncomplete="unlock();" style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showSeleniumResults}" reRender="fieldSets,pins,GeneralActionButtons">
                                        <span class="slds-truncate">
                                            {!$Label.copado__STR} (<span id="strsize">{!strSize}</span>)
                                        </span>
                                            </apex:commandLink>
                                        </li>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!NOT(contains(disabledTabs,'compliancescanresults'))}">
                                        <li class="slds-context-bar__item slds-context-bar__item_divider-right" style="{!IF(showComplianceResults, 'background-color: rgb(244,246,249)','')}">
                                            <apex:commandLink onclick="lock();" oncomplete="unlock();" style="text-decoration:none;" styleClass="slds-context-bar__label-action" action="{!showComplianceResults}" reRender="fieldSets,pins,GeneralActionButtons">
                                        <span class="slds-truncate">
                                            {!$Label.copado__CSR} (<span id="csrsize">{!csrSize}</span>)
                                        </span>
                                            </apex:commandLink>
                                        </li>
                                    </apex:outputPanel>
                                </ul>
                            </nav>
                        </apex:outputPanel>
                        <apex:outputPanel layout="block" id="fieldSets" style="margin-top: 25px;">
                            <!-- USER STORIES FIELDSET -->
                            <apex:outputPanel id="userStories" layout="block" rendered="{!showUserStories}">

                                <h3 style="font-weight: bolder;">{!$Label.copado__Please_Select_Project_or_Release}</h3>
                                <div class="slds-grid">
                                    <div class="slds-col" style="padding-right: 10px;">
                                        <label class="slds-form-element__label" for="projectPicklist">
                                            {!$ObjectType.copado__Promotion__c.fields.copado__Project__c.Label}
                                        </label>
                                        <apex:selectList id="projectPicklist" html-data-id="promotionProject" value="{!promotion.copado__Project__c}" multiselect="false" size="1" styleClass="slds-select">
                                            <apex:selectOptions value="{!projects}" />
                                        </apex:selectList>
                                    </div>
                                    <div class="slds-col" style="padding-left: 10px;">
                                        <label class="slds-form-element__label" for="releasePicklist">
                                            {!$ObjectType.copado__Promotion__c.fields.copado__Release__c.Label}
                                        </label>
                                        <apex:selectList id="releasePicklist" html-data-id="promotionRelease" value="{!promotion.copado__Release__c}" multiselect="false" size="1" styleClass="slds-select">
                                            <apex:selectOptions value="{!releases}" />
                                        </apex:selectList>
                                    </div>
                                </div>

                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">
                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType == 'merge'}">
                                            {!$Label.copado__USER_STORIES_AHEAD}
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="none" rendered="{!latestOverlay.pathType != 'merge'}">
                                            {!$Label.copado__USER_STORIES_BEHIND}
                                        </apex:outputPanel>
                                    </legend>
                                    <table class="slds-table slds-table_resizable-cols slds-table_fixed-layout slds-table_bordered slds-table_striped sortableTable" role="grid" id="userStoriesTable">
                                        <thead>
                                        <tr class="slds-line-height_reset">
                                            <th scope="col" class="slds-text-align_right" style="width: 3.25rem;">
                                                <div class="slds-th__action slds-th__action_form">
                                                    <span class="slds-checkbox">
                                                    <input type="checkbox" name="options" id="selectAll" value="on" />
                                                    <label class="slds-checkbox__label" for="selectAll">
                                                        <span class="slds-checkbox_faux"></span>
                                                    <span class="slds-form-element__label slds-assistive-text">{!$Label.SELECT_ALL}</span>
                                                    </label>
                                                    </span>
                                                </div>
                                            </th>
                                            <apex:repeat value="{!$ObjectType.copado__User_Story__c.FieldSets.copado__CBM_Fields}" var="fld">
                                                <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col">
                                                    <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                        <span class="slds-assistive-text">{!$Label.Sort}</span>
                                                        <span class="slds-truncate" title="Name">{!fld.Label}</span>
                                                        <div class="slds-icon_container">
                                                            <svg class="slds-icon slds-icon_x-small slds-icon-text-default slds-is-sortable__icon" aria-hidden="true">
                                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                            </svg>
                                                        </div>
                                                        <span class="slds-assistive-text" aria-live="assertive" aria-atomic="true"></span>
                                                    </a>
                                                    <div class="slds-resizable">
                                                        <label for="cell-resize-handle-1" class="slds-assistive-text">{!fld.Label} column width</label>
                                                        <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                        <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                        <span class="slds-resizable__divider"></span>
                                                        </span>
                                                    </div>
                                                </th>
                                            </apex:repeat>
                                        </tr>
                                        </thead>
                                        <tbody id="mainTableBody">
                                        <apex:repeat value="{!latestOverlay.userStories}" var="us" id="userStoryRepeat">
                                            <tr class="slds-hint-parent">
                                                <td role="gridcell" class="slds-text-align_right" style="width: 3.25rem;">
                                                    <apex:inputCheckbox id="checkbox-2" value="{!us.isSelected}" onchange="calcDepUS(); return false;" />
                                                </td>
                                                <apex:repeat value="{!$ObjectType.copado__User_Story__c.FieldSets.copado__CBM_Fields}" var="fld">
                                                    <td role="gridcell" class="">
                                                        <div class="slds-truncate" title="{!us.userStory[fld]}">
                                                            <apex:outputPanel layout="none">
                                                                <apex:outputField value="{!us.userStory[fld]}"/>
                                                            </apex:outputPanel>
                                                        </div>
                                                    </td>
                                                </apex:repeat>
                                            </tr>
                                        </apex:repeat>
                                        </tbody>
                                    </table>
                                    <script>
                                        var _config = {};
                                        backDeploy.initFileDifferences(_config,renderTable());
                                    </script>
                                </fieldset>
                                <!-- END OF USER STORIES FIELDSET -->
                            </apex:outputPanel>
                            <!-- COMMITS FIELDSET -->
                            <apex:outputPanel id="commits" layout="block" rendered="{!showCommits}">
                                <apex:outputPanel rendered="{!and(!isnull(latestOverlay.commitsAhead), !isnull(latestOverlay.commitsBehind), or(latestOverlay.pathType=='merge'&&latestOverlay.commitsAhead>0, latestOverlay.pathType=='pull'&&latestOverlay.commitsBehind>0))}">
                                    <p>&nbsp;</p>
                                    <p>&nbsp;</p>
                                    <h2 style="text-align: center">{!IF(errorSize>0,$Label.You_Cannot_Sync,$Label.Ready_To_Sync)}</h2>
                                </apex:outputPanel>
                                <script>
                                    var _config = {};
                                    backDeploy.initFileDifferences(_config);
                                </script>
                            </apex:outputPanel>
                            <!-- ERRORS FIELDSET -->
                            <apex:outputPanel id="deploymentErrors" layout="block" rendered="{!showErrors}">

                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">
                                        {!$Label.DEPLOYMENT_ERRORS}
                                    </legend>
                                    <table class="slds-table slds-table_resizable-cols slds-table_fixed-layout slds-table_bordered slds-table_striped sortableTable" role="grid" id="commitsTable">
                                        <thead>
                                        <tr class="slds-line-height_reset">
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 7%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="Name">{!$Label.LEVEL}</span>
                                                </a>

                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 70%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="Name">{!$Label.MESSAGE}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 23%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="Name">{!$Label.COPADO_TIP}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        <apex:repeat value="{!latestOverlay.errors}" var="err">
                                            <tr class="slds-hint-parent">
                                                <td role="gridcell" class="">
                                                    <div class="slds-truncate" title="{!err.Level}">
                                                        <span style="color: red;font-weight: bolder;">{!err.Level}</span>
                                                    </div>
                                                </td>
                                                <td role="gridcell" class="slds-cell-wrap">
                                                    <div class="slds-cell-wrap" title="{!err.errorMessage}">
                                                        {!err.errorMessage}
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!err.copadoTip}">
                                                        {!err.copadoTip}
                                                    </div>
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                        </tbody>
                                    </table>
                                    <script>
                                    var _config = {};
                                    backDeploy.initFileDifferences(_config);

                                    </script>
                                </fieldset>
                                <!-- END OF ERRORS FIELDSET -->
                            </apex:outputPanel>
                            <!-- COMPLIANCE RESULT FIELDSET -->
                            <apex:outputPanel id="complianceResults" layout="block" rendered="{!showComplianceResults}">

                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">
                                        {!$Label.CSR}
                                    </legend>
                                    <table class="slds-table slds-table_resizable-cols slds-table_fixed-layout slds-table_bordered slds-table_striped sortableTable" role="grid" id="compliancesTable">
                                        <thead>
                                        <tr class="slds-line-height_reset">
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 12%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$Label.CSR}">{!$Label.CSR}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 8%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$ObjectType.Compliance_Scan_Result__c.Fields.User_Story__c.Label}">{!$ObjectType.Compliance_Scan_Result__c.Fields.User_Story__c.Label}</span>
                                                </a>

                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 25%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$ObjectType.Compliance_Scan_Result__c.Fields.Resolution_Details__c.Label}">{!$ObjectType.Compliance_Scan_Result__c.Fields.Resolution_Details__c.Label}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 7%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$ObjectType.Compliance_Scan_Result__c.Fields.Findings__c.Label}">{!$ObjectType.Compliance_Scan_Result__c.Fields.Findings__c.Label}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 10%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$ObjectType.Compliance_Scan_Result__c.Fields.Highest_Severity__c.Label}">{!$ObjectType.Compliance_Scan_Result__c.Fields.Highest_Severity__c.Label}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 12%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$ObjectType.Compliance_Scan_Result__c.Fields.Highest_Rule_Action__c.Label}">{!$ObjectType.Compliance_Scan_Result__c.Fields.Highest_Rule_Action__c.Label}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 6%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="{!$ObjectType.Compliance_Scan_Result__c.Fields.Status__c.Label}">{!$ObjectType.Compliance_Scan_Result__c.Fields.Status__c.Label}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 9%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="Last Modified By">{!$Label.LASTMODIFIEDBY}y</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 11%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">Sort </span>
                                                    <span class="slds-truncate" title="Last Modified Date dd/mm/yyyy">{!$Label.Last_Modified_Date}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        <apex:repeat value="{!compliencaResultsList}" var="cr">
                                            <tr class="slds-hint-parent">
                                                <td role="gridcell" class="">
                                                    <div class="slds-truncate" title="{!cr.Name}">
                                                        <a onclick="copadoNavigateToUrl('{!cr.Id}','{!URLFOR($Action.Compliance_Scan_Result__c.View,cr.Id)}', '_blank');" href="javascript:void(0);"><span style="color: #036fd2;font-weight: bolder;"><apex:outputText value="{!cr.Name}" /></span></a>
                                                        <!-- TODO:  remember that when salesforce announce something about lightning urlAction-->
                                                    </div>
                                                </td>
                                                <td role="gridcell" class="">
                                                    <div class="slds-truncate" title="{!cr.user_story__c}">
                                                        <apex:outputPanel layout="none" rendered="{!cr.copado__User_Story__c!=null}">
                                                            <a onclick="copadoNavigateToUrl('{!cr.User_Story__c}','{!URLFOR($Action.User_Story__c.View,cr.User_Story__c)}', '_blank');" href="javascript:void(0);"><span style="color: #036fd2;font-weight: bolder;"><apex:outputText value="{!cr.User_Story__r.Name}" /></span></a>
                                                            <!-- TODO:  remember that when salesforce announce something about lightning urlAction-->
                                                        </apex:outputPanel>
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!HTMLENCODE(cr.copado__Resolution_Details__c)}">
                                                        <apex:outputText value="{!HTMLENCODE(cr.copado__Resolution_Details__c)}" />
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!cr.copado__Findings__c}">
                                                        <apex:outputText value="{!cr.copado__Findings__c}" />
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!HTMLENCODE(cr.copado__Highest_Severity__c)}">
                                                        <apex:outputText value="{!HTMLENCODE(cr.copado__Highest_Severity__c)}" />
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!HTMLENCODE(cr.copado__Highest_Rule_Action__c)}">
                                                        <apex:outputText value="{!HTMLENCODE(cr.copado__Highest_Rule_Action__c)}" />
                                                    </div>
                                                </td>

                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!HTMLENCODE(cr.Status__c)}">
                                                        {!HTMLENCODE(cr.Status__c)}
                                                    </div>
                                                </td>
                                                <td role="gridcell" class="slds-cell-wrap">
                                                    <div class="slds-cell-wrap" title="{!HTMLENCODE(cr.LastModifiedBy.Name)}">
                                                        <apex:outputText value="{!HTMLENCODE(cr.LastModifiedBy.Name)}" />
                                                    </div>
                                                </td>
                                                <td role="gridcell" class="slds-cell-wrap">
                                                    <div class="slds-cell-wrap" title="{!cr.LastModifiedDate}">
                                                        <apex:outputText value="{0, date, dd/mm/yyyy HH:MM}">
                                                            <apex:param value="{!cr.LastModifiedDate}" />
                                                        </apex:outputText>
                                                    </div>
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                        </tbody>
                                    </table>
                                    <script>
                                        var _config = {};
                                        backDeploy.initFileDifferences(_config,renderTable4Compliance());
                                    </script>
                                </fieldset>
                                <!-- END OF COMPLIANCE RESULT FIELDSET -->
                            </apex:outputPanel>
                            <!-- SELENIUM RESULT FIELDSET -->
                            <apex:outputPanel id="seleniumResults" layout="block" rendered="{!showSeleniumResults}">

                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">
                                        {!$Label.STR}
                                    </legend>
                                    <table class="slds-table slds-table_resizable-cols slds-table_fixed-layout slds-table_bordered slds-table_striped sortableTable" role="grid" id="seleniumsTable">
                                        <thead>
                                        <tr class="slds-line-height_reset">
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 19%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="{!$Label.Selenium_Test_Group_Name}">{!$Label.Selenium_Test_Group_Name}</span>
                                                </a>

                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 21%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="{!$Label.TYPE}">{!$Label.TYPE}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 20%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="{!$Label.Status_Date}">{!$Label.Status_Date}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 20%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="{!$Label.STATUS}">{!$Label.STATUS}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                            <th class="slds-is-sortable slds-is-resizable slds-text-title_caps" scope="col" style="width: 20%">
                                                <a href="javascript:void(0);" class="slds-th__action slds-text-link_reset" tabindex="0">
                                                    <span class="slds-assistive-text">{!$Label.Sort} </span>
                                                    <span class="slds-truncate" title="{!$Label.Status_Icon}">{!$Label.Status_Icon}</span>
                                                </a>
                                                <div class="slds-resizable">
                                                    <label for="cell-resize-handle-1" class="slds-assistive-text">{!$Label.Message_Column_Width}</label>
                                                    <input type="range" min="20" max="1000" class="slds-resizable__input slds-assistive-text" id="cell-resize-handle-1" tabindex="0" />
                                                    <span class="slds-resizable__handle" draggable="true" onmousedown="CalculateWidth(this, event)" ondrag="SetNewWidth(this, event)" ondragend="return false;">
                                                    <span class="slds-resizable__divider"></span>
                                                    </span>
                                                </div>
                                            </th>
                                        </tr>
                                        </thead>
                                        <tbody>

                                        <apex:repeat value="{!SeleniumResultsList}" var="sr">
                                            <tr class="slds-hint-parent">
                                                <td role="gridcell" class="">
                                                    <div class="slds-truncate" title="{!HTMLENCODE(sr.name)}">
                                                        <a onclick="copadoNavigateToUrl('{!sr.Id}','{!URLFOR($Action.Selenium_Test_Group__c.View,sr.Id)}', '_blank');" href="javascript:void(0);"><span style="color: #036fd2;font-weight: bolder;"><apex:outputText value="{!sr.name}" /></span></a>
                                                        <!-- TODO:  remember that when salesforce announce something about lightning urlAction-->
                                                    </div>
                                                </td>
                                                <td role="gridcell" class="slds-cell-wrap">
                                                    <div class="slds-cell-wrap" title="{!HTMLENCODE(sr.type__c)}">
                                                        {!HTMLENCODE(sr.type__c)}
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate">
                                                        <apex:outputText value="
                                                                {0,date,dd/MM/YYYY HH:mm}">
                                                            <apex:param value="{!sr.copado__Status_Date__c}" />
                                                        </apex:outputText>
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate" title="{!HTMLENCODE(sr.copado__Status__c)}">
                                                        {!HTMLENCODE(sr.copado__Status__c)}
                                                    </div>
                                                </td>
                                                <td role="gridcell">
                                                    <div class="slds-truncate">
                                                        <apex:outputField value="{!sr.copado__Status_Icon__c}" />
                                                    </div>
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                        </tbody>
                                    </table>
                                    <script>
                                        var _config = {};
                                        backDeploy.initFileDifferences(_config,renderTable4Selenium());
                                    </script>
                                </fieldset>
                                <!-- END OF SELENIUM RESULT FIELDSET -->
                            </apex:outputPanel>
                            <!-- FILE DIFFERENCES FIELDSET -->
                            <apex:outputPanel id="fileDifferences" layout="block" rendered="{!showFileDifferences}" style="min-height: 85%;">
                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">{!$Label.FILE_DIFFERENCES}</legend>
                                    <script>
                                        var _config = {
                                            gridMode: 'fileDiff'
                                        };
                                        backDeploy.initFileDifferences(_config);
                                    </script>
                                    <div id="fileDiffGrid"></div>
                                </fieldset>
                                <!-- END OF FILE DIFFERENCES FIELDSET -->
                            </apex:outputPanel>
                            <!-- AUTO RESOLVED FIELDSET -->
                            <apex:outputPanel id="autoResolved" layout="block" rendered="{!showAutoResolves}">
                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">{!$label.AUTO_RESOLVED_CONFLICTS}</legend>
                                    <script>
                                        var _config = {
                                            gridMode: 'fileConflicts'
                                        };
                                        backDeploy.initFileDifferences(_config);
                                    </script>
                                    <div id="fileDiffGrid"></div>
                                </fieldset>
                                <!-- END OF AUTO RESOLVED FIELDSET -->
                            </apex:outputPanel>
                            <!-- MERGED FILES FIELDSET -->
                            <apex:outputPanel id="mergedFiles" layout="block" rendered="{!showMergeDifferences}">
                                <fieldset class="slds-box slds-theme--default slds-container--fluid">
                                    <legend class="slds-text-heading--medium " style="padding-top: 10px;">{!$label.MERGED_FILES}</legend>
                                    <script>
                                        var _config = {
                                            gridMode: 'fileDiff',
                                            dataMode: 'mergeDiff'
                                        };
                                        backDeploy.initFileDifferences(_config);
                                    </script>
                                    <div id="fileDiffGrid"></div>
                                </fieldset>
                                <!-- END OF MERGED FILES FIELDSET -->
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </div>
                    <!-- Action footer -->
                    <footer class="slds-modal__footer">
                        <apex:outputPanel id="GeneralActionButtons" layout="block">
                            <apex:outputPanel id="promotionButton" layout="none" rendered="{!showUserStories}">
                                <button class="slds-button slds-button_neutral slds-path__mark-complete slds-m-horizontal_small" onclick="closeModal(); return false;">{!$Label.copado__Cancel}</button>
                                <apex:commandLink value="Validate Selections" styleClass="slds-button slds-button_brand slds-path__mark-complete slds-m-horizontal_small" id="validateSelections" action="{!createPromotionforValidation}" reRender="maodalHeader" onClick="setLockScreenMessage('Loading...');" oncomplete="redirectToPromotion();overridePageMessages();setLockScreenMessage('');" />
                                <apex:actionFunction name="redirectToPromotion" action="{!redirectToPromotion}" reRender="xxx" />
                                <apex:commandLink rendered="{!IF(AND(NOT(ISNULL(allStorySize)),allStorySize > 0),true,false)}" target="_blank" value="Create {!promotionBtnLabel}" styleClass="slds-button slds-button_brand slds-path__mark-complete slds-m-horizontal_small" id="createPromotion" action="{!createPromotion}" reRender="maodalHeader" onClick="lockScreen();clearSearchFilter();" oncomplete="overridePageMessages();">
                                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#forward')}"></use>
                                    </svg>
                                </apex:commandLink>
                                <apex:commandLink rendered="{!IF(AND(NOT(ISNULL(allStorySize)),allStorySize > 0),true,false)}" target="_blank" value="Create {!promotionBtnLabel} & Deploy" styleClass="slds-button slds-button_success slds-path__mark-complete slds-m-horizontal_small" id="createPromotionAndDeploy" action="{!createPromotionAndDeploy}" reRender="maodalHeader" onClick="lockScreen();clearSearchFilter();" oncomplete="overridePageMessages();">
                                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#upload')}"></use>
                                    </svg>
                                </apex:commandLink>
                                <apex:commandlink id="warningLink" style="float: right;padding-top: 4px;" rendered="{!AND(dependenciesList != null,dependenciesList.size>0)}" title="{!$Label.copado__USDependency_IconTitle}" onclick="openUSDep(); return false;" styleClass="icon-blinker">
                                </apex:commandlink>
                            </apex:outputPanel>
                            <apex:outputPanel id="syncButton" layout="none" rendered="{!showCommits}">
                                <button class="slds-button slds-button_neutral slds-path__mark-complete slds-m-horizontal_small" onclick="closeModal(); return false;">{!$Label.copado__Cancel}</button>
                                <apex:outputPanel layout="none" rendered="{!and(!isnull(latestOverlay.commitsAhead), !isnull(latestOverlay.commitsBehind), or(latestOverlay.commitsAhead>0, latestOverlay.commitsBehind>0))}">

                                    <apex:outputPanel rendered="{!errorSize<=0}">
                                        <button style="float: right !important;" class="slds-button slds-button_success slds-path__mark-complete slds-m-horizontal_small" id="btn_sync" onclick="syncCommits(); return false;">
                                            <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#flow')}">
                                                </use>
                                            </svg>
                                            {!$Label.copado__Sync}
                                        </button>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!errorSize>0}">
                                        <button style="float: right !important;" class="slds-button slds-button_success slds-path__mark-complete slds-m-horizontal_small" id="btn_sync" disabled="disabled">
                                            <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#flow')}"></use>
                                            </svg>
                                            {!$Label.copado__Sync}
                                        </button>
                                    </apex:outputPanel>

                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop" id="backdrop"></div>
        </div>

        <!-- FILE DIFF COMPARISON MODAL -->
        <div id="fileDiffModal">
            <section role="dialog" tabindex="-1" id="fileModal" aria-labelledby="modal-heading-01" aria-describedby="modal-content-id-1" class="slds-modal slds-modal_large">
                <div class="slds-modal__container" style="width: 99% !important;">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.Close}" onclick="closeFileModal();return false;">
                            <svg class="slds-button__icon slds-button__icon_large slds-icon-text-error" aria-hidden="true">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">{!$Label.copado__CLOSE}</span>
                        </button>
                        <apex:outputPanel id="fileNames" layout="block">
                            <h2 id="fileModalHeading" class="slds-text-heading_medium slds-hyphenate"></h2>
                        </apex:outputPanel>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1" style="min-height: 84%;">
                        <div id="window" style="width:100%">
                            <div id="windowHeader">
                                <span></span>
                            </div>
                            <div id="windowContent">
                                <div style="display:none; width:100%; height:100%;" id="div-bh-diff">
                                    <div id="behindFileList" style="width:100%;"></div>
                                    <div class="slds-grid" style="margin-bottom: 10px">
                                        <div class="slds-grid" style="width: 100%">
                                            <div class="slds-col">
                                                <apex:outputLabel >{!$Label.copado__Display_Differences}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="viewTypeSelector-bh" class="js-viewType" size="1" onchange="reRenderFromRenderOption(this, 'pull');">
                                                        <option value="0" label="Side by Side">{!$Label.Side_by_Side}</option>
                                                        <option value="1" label="Inline">{!$Label.Inline}</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </div>
                                            <div class="slds-col">
                                                <apex:outputLabel >{!$Label.copado__Context_size_optional}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="contextSelector-bh" class="js-context" size="1" onChange="reRenderFromContextSelector(this, 'pull');">
                                                        <option value="1" label="1">1</option>
                                                        <option value="5" label="5" selected="selected">5</option>
                                                        <option value="10" label="10">10</option>
                                                        <option value="15" label="15">15</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </div>
                                        </div>
                                        <br />
                                    </div>
                                    <div class="slds-grid">
                                        <div class="slds-col">
                                            <div id="behindDiffWrapper" style="width:100%; height:100%"></div>
                                        </div>
                                    </div>
                                </div>
                                <div style="display:none;" id="div-ah-diff">
                                    <div id="aheadFileList"></div>
                                    <div class="slds-grid" style="margin-bottom: 10px">
                                        <div class="slds-grid" style="width: 100%">
                                            <div class="slds-col">
                                                <apex:outputLabel >{!$Label.copado__Display_Differences}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="viewTypeSelector-ah" class="js-viewType" size="1" onchange="reRenderFromRenderOption(this, 'merge');">
                                                        <option value="0" label="Side by Side">{!$Label.Side_by_Side}</option>
                                                        <option value="1" label="Inline">{!$Label.Inline}</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </div>
                                            <div class="slds-col">
                                                <apex:outputLabel >{!$Label.copado__Context_size_optional}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="contextSelector-ah" class="js-context" size="1" onChange="reRenderFromContextSelector(this, 'merge');">
                                                        <option value="1" label="1">1</option>
                                                        <option value="5" label="5" selected="selected">5</option>
                                                        <option value="10" label="10">10</option>
                                                        <option value="15" label="15">15</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-grid">
                                        <div class="slds-col">
                                            <div id="aheadDiffWrapper"></div>
                                        </div>
                                    </div>
                                </div>
                                <div style="display:none;" id="div-p-e">
                                    <div id="div-p-eFileList"></div>
                                    <apex:pageBlock >
                                        <apex:pageBlockSection >
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Display_Differences}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="viewTypeSelector-pe" class="js-viewType" size="1" onchange="reRenderFromRenderOption(this, 'div-p-e');">
                                                        <option value="0" label="Side by Side">{!$Label.Side_by_Side}</option>
                                                        <option value="1" label="Inline">{!$Label.Inline}</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Context_size_optional}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="contextSelector-pe" class="js-context" size="1" onChange="reRenderFromContextSelector(this, 'div-p-e');">
                                                        <option value="1" label="1">1</option>
                                                        <option value="5" label="5" selected="selected">5</option>
                                                        <option value="10" label="10">10</option>
                                                        <option value="15" label="15">15</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                        </apex:pageBlockSection>
                                        <div id="div-p-eDiffWrapper"></div>
                                    </apex:pageBlock>
                                </div>
                                <div style="display:none;" id="div-m-e">
                                    <div id="div-m-eFileList"></div>
                                    <apex:pageBlock >
                                        <apex:pageBlockSection >
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Display_Differences}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="viewTypeSelector-me" class="js-viewType" size="1" onchange="reRenderFromRenderOption(this, 'div-m-e');">
                                                        <option value="0" label="Side by Side">{!$Label.Side_by_Side}</option>
                                                        <option value="1" label="Inline">{!$Label.Inline}</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Context_size_optional}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="contextSelector-me" class="js-context" size="1" onChange="reRenderFromContextSelector(this, 'div-m-e');">
                                                        <option value="1" label="1">1</option>
                                                        <option value="5" label="5" selected="selected">5</option>
                                                        <option value="10" label="10">10</option>
                                                        <option value="15" label="15">15</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                        </apex:pageBlockSection>
                                        <div id="div-m-eDiffWrapper"></div>
                                    </apex:pageBlock>
                                </div>
                                <div style="display:none;" id="div-p-v-e"></div>
                                <div style="display:none;" id="div-p-d-e"></div>
                                <div style="display:none;" id="div-m-v-e"></div>
                                <div style="display:none;" id="div-m-d-e"></div>
                                <div style="display:none;" id="div-p-m">
                                    <div id="div-p-mFileList"></div>
                                    <apex:pageBlock >
                                        <apex:pageBlockSection >
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Display_Differences}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="viewTypeSelector-pm" class="js-viewType" size="1" onchange="reRenderFromRenderOption(this, 'div-p-m');">
                                                        <option value="0" label="Side by Side">{!$Label.Side_by_Side}</option>
                                                        <option value="1" label="Inline">{!$Label.Inline}</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Context_size_optional}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="contextSelector-pm" class="js-context" size="1" onChange="reRenderFromContextSelector(this, 'div-p-m');">
                                                        <option value="1" label="1">1</option>
                                                        <option value="5" label="5" selected="selected">5</option>
                                                        <option value="10" label="10">10</option>
                                                        <option value="15" label="15">15</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                        </apex:pageBlockSection>
                                        <div id="div-p-mDiffWrapper"></div>
                                    </apex:pageBlock>
                                </div>
                                <div style="display:none;" id="div-m-m">
                                    <div id="div-m-mFileList"></div>
                                    <apex:pageBlock >
                                        <apex:pageBlockSection >
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Display_Differences}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="viewTypeSelector-mm" class="js-viewType" size="1" onchange="reRenderFromRenderOption(this, 'div-m-m');">
                                                        <option value="0" label="Side by Side">{!$Label.Side_by_Side}</option>
                                                        <option value="1" label="Inline">{!$Label.Inline}</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                            <apex:pageBlockSectionItem >
                                                <apex:outputLabel >{!$Label.copado__Context_size_optional}</apex:outputLabel>
                                                <apex:outputPanel >
                                                    <select id="contextSelector-mm" class="js-context" size="1" onChange="reRenderFromContextSelector(this, 'div-m-m');">
                                                        <option value="1" label="1">1</option>
                                                        <option value="5" label="5" selected="selected">5</option>
                                                        <option value="10" label="10">10</option>
                                                        <option value="15" label="15">15</option>
                                                    </select>
                                                </apex:outputPanel>
                                            </apex:pageBlockSectionItem>
                                        </apex:pageBlockSection>
                                        <div id="div-m-mDiffWrapper"></div>
                                    </apex:pageBlock>
                                </div>
                            </div>
                        </div>
                    </div>

                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral" onclick="closeFileModal(); return false;">{!$Label.Cancel}</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop" id="fileBackdrop"></div>
        </div>
        <!-- END OF FILE DIFF COMPARISON MODAL -->
        <apex:outputPanel layout="block" id="dependencyUSComponent">

            <section role="dialog" tabindex="-1" id="dependencyUSComponentSection" aria-labelledby="modal-heading-01" aria-describedby="modal-content-id-1" class="slds-modal slds-modal_large">
                <div class="slds-modal__container" style="width: 99% !important;">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.CLOSE}" onclick="closeUSDep();return false;">
                            <svg class="slds-button__icon slds-button__icon_large slds-icon-text-error" aria-hidden="true">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">{!$Label.copado__CLOSE}</span>
                        </button>
                        <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">{!$label.USDependency_USDependenciesTitle}</h2>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1" style="min-height: 84%;">
                        <div id="window" style="width:100%">
                            <div id="windowHeader">
                                <span></span>
                            </div>
                            <div id="windowContent">
                                <apex:outputpanel id="cRrender" layout="block">
                                    <c:UserStoryDependencies usList="{!dependenciesList}" />
                                </apex:outputpanel>
                            </div>
                        </div>
                    </div>

                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral" onclick="closeUSDep(); return false;">{!$Label.Cancel}</button>
                    </footer>
                </div>
            </section>


            <div class="slds-backdrop" id="USbackdrop"></div>
        </apex:outputPanel>
    </apex:form>
    </body>
    <c:CheckFeaturesComponent />
    </html>
</apex:page>